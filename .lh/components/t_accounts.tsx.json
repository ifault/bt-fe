{
    "sourceFile": "components/t_accounts.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 174,
            "patches": [
                {
                    "date": 1710333447062,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1710333463288,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,10 +3,10 @@\n \r\n export default function TAccounts() {\r\n   return (\r\n     <div>\r\n-      <TCard title=\"请把账户粘贴到这里\">\r\n-        \r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        账户信息\r\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1710333661773,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,33 @@\n import TCard from './t_card'\r\n+import { useState } from 'react'\r\n \r\n \r\n export default function TAccounts() {\r\n+\r\n+  const [accounts, setAccounts] = useState([]);\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split(\"\\n\");\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(\",\"); \r\n+      console.log(columns);\r\n+      \r\n+      return columns.map((column) => column.trim());\r\n+    });\r\n+    \r\n+    setAccounts(result);\r\n+    \r\n+  };\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData;\r\n+    const pastedText = clipboardData.getData('text');\r\n+    const formattedValue = formatPastedText(pastedText);\r\n+\r\n+    setPasteValue(formattedValue);\r\n+  };\r\n+\r\n   return (\r\n     <div>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         账户信息\r\n"
                },
                {
                    "date": 1710333699604,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -3,16 +3,14 @@\n \r\n \r\n export default function TAccounts() {\r\n \r\n-  const [accounts, setAccounts] = useState([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([]);\r\n \r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split(\"\\n\");\r\n     const result = rows.map((row) => {\r\n       const columns = row.split(\",\"); \r\n-      console.log(columns);\r\n-      \r\n       return columns.map((column) => column.trim());\r\n     });\r\n     \r\n     setAccounts(result);\r\n"
                },
                {
                    "date": 1710333727280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -19,11 +19,9 @@\n \r\n   const handlePaste = (event: any) => {\r\n     const clipboardData = event.clipboardData || window.clipboardData;\r\n     const pastedText = clipboardData.getData('text');\r\n-    const formattedValue = formatPastedText(pastedText);\r\n-\r\n-    setPasteValue(formattedValue);\r\n+    formatPastedText(pastedText)\r\n   };\r\n \r\n   return (\r\n     <div>\r\n"
                },
                {
                    "date": 1710333768356,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,8 +1,16 @@\n import TCard from './t_card'\r\n import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n \r\n-\r\n export default function TAccounts() {\r\n \r\n   const [accounts, setAccounts] = useState<string[][]>([]);\r\n \r\n@@ -25,9 +33,19 @@\n \r\n   return (\r\n     <div>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n-        账户信息\r\n+      <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>ID</TableHead>\r\n+              <TableHead>状态</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            dd\r\n+          </TableBody>\r\n+        </Table>\r\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1710333787169,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,52 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+\r\n+export default function TAccounts() {\r\n+\r\n+  const [accounts, setAccounts] = useState<string[][]>([]);\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split(\"\\n\");\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(\",\"); \r\n+      return columns.map((column) => column.trim());\r\n+    });\r\n+    \r\n+    setAccounts(result);\r\n+    \r\n+  };\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData;\r\n+    const pastedText = clipboardData.getData('text');\r\n+    formatPastedText(pastedText)\r\n+  };\r\n+\r\n+  return (\r\n+    <div>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+      <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            dd\r\n+          </TableBody>\r\n+        </Table>\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710333807321,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,62 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+\r\n+export default function TAccounts() {\r\n+\r\n+  const [accounts, setAccounts] = useState<string[][]>([]);\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split(\"\\n\");\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(\",\"); \r\n+      return columns.map((column) => column.trim());\r\n+    });\r\n+    \r\n+    setAccounts(result);\r\n+    \r\n+  };\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData;\r\n+    const pastedText = clipboardData.getData('text');\r\n+    formatPastedText(pastedText)\r\n+  };\r\n+\r\n+  return (\r\n+    <div>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+      <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts && accounts.map((account: string[], index: number) => {\r\n+              return (\r\n+                <TableRow key={index}>\r\n+                  <TableCell className=\"font-medium\">\r\n+                    {account[0]}\r\n+                  </TableCell>\r\n+                  <TableCell>{account[1]}</TableCell>\r\n+                  <TableCell>{account[2]}</TableCell>\r\n+                </TableRow>\r\n+              )\r\n+             }}\r\n+          </TableBody>\r\n+        </Table>\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710333839587,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,124 +42,19 @@\n               <TableHead>身份证</TableHead>\r\n             </TableRow>\r\n           </TableHeader>\r\n           <TableBody>\r\n-            {accounts && accounts.map((account: string[], index: number) => {\r\n-              return (\r\n+            {accounts && accounts.map((account: string[], index: number) => {     return (\r\n                 <TableRow key={index}>\r\n                   <TableCell className=\"font-medium\">\r\n                     {account[0]}\r\n                   </TableCell>\r\n                   <TableCell>{account[1]}</TableCell>\r\n                   <TableCell>{account[2]}</TableCell>\r\n                 </TableRow>\r\n-              )\r\n-             }}\r\n+              )        })}\r\n           </TableBody>\r\n         </Table>\r\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-\r\n-export default function TAccounts() {\r\n-\r\n-  const [accounts, setAccounts] = useState<string[][]>([]);\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split(\"\\n\");\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(\",\"); \r\n-      return columns.map((column) => column.trim());\r\n-    });\r\n-    \r\n-    setAccounts(result);\r\n-    \r\n-  };\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData;\r\n-    const pastedText = clipboardData.getData('text');\r\n-    formatPastedText(pastedText)\r\n-  };\r\n-\r\n-  return (\r\n-    <div>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-      <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            dd\r\n-          </TableBody>\r\n-        </Table>\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-\r\n-export default function TAccounts() {\r\n-\r\n-  const [accounts, setAccounts] = useState<string[][]>([]);\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split(\"\\n\");\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(\",\"); \r\n-      return columns.map((column) => column.trim());\r\n-    });\r\n-    \r\n-    setAccounts(result);\r\n-    \r\n-  };\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData;\r\n-    const pastedText = clipboardData.getData('text');\r\n-    formatPastedText(pastedText)\r\n-  };\r\n-\r\n-  return (\r\n-    <div>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-      <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>ID</TableHead>\r\n-              <TableHead>状态</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            dd\r\n-          </TableBody>\r\n-        </Table>\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710333868820,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,49 +10,49 @@\n   TableRow,\r\n } from '@/components/ui/table'\r\n \r\n export default function TAccounts() {\r\n+  const [accounts, setAccounts] = useState<string[][]>([])\r\n \r\n-  const [accounts, setAccounts] = useState<string[][]>([]);\r\n-\r\n   const formatPastedText = (data: string) => {\r\n-    const rows = data.split(\"\\n\");\r\n+    const rows = data.split('\\n')\r\n     const result = rows.map((row) => {\r\n-      const columns = row.split(\",\"); \r\n-      return columns.map((column) => column.trim());\r\n-    });\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    console.log(result);\r\n     \r\n-    setAccounts(result);\r\n-    \r\n-  };\r\n+    setAccounts(result)\r\n+  }\r\n \r\n   const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData;\r\n-    const pastedText = clipboardData.getData('text');\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n     formatPastedText(pastedText)\r\n-  };\r\n+  }\r\n \r\n   return (\r\n     <div>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n-      <Table>\r\n+        <Table>\r\n           <TableHeader>\r\n             <TableRow>\r\n               <TableHead>用户名</TableHead>\r\n               <TableHead>密码</TableHead>\r\n               <TableHead>身份证</TableHead>\r\n             </TableRow>\r\n           </TableHeader>\r\n           <TableBody>\r\n-            {accounts && accounts.map((account: string[], index: number) => {     return (\r\n-                <TableRow key={index}>\r\n-                  <TableCell className=\"font-medium\">\r\n-                    {account[0]}\r\n-                  </TableCell>\r\n-                  <TableCell>{account[1]}</TableCell>\r\n-                  <TableCell>{account[2]}</TableCell>\r\n-                </TableRow>\r\n-              )        })}\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n           </TableBody>\r\n         </Table>\r\n       </TCard>\r\n     </div>\r\n"
                },
                {
                    "date": 1710334040704,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,10 +30,10 @@\n     formatPastedText(pastedText)\r\n   }\r\n \r\n   return (\r\n-    <div>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\" >\r\n         <Table>\r\n           <TableHeader>\r\n             <TableRow>\r\n               <TableHead>用户名</TableHead>\r\n"
                },
                {
                    "date": 1710335709847,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -8,9 +8,9 @@\n   TableHead,\r\n   TableHeader,\r\n   TableRow,\r\n } from '@/components/ui/table'\r\n-\r\n+import { Button } from '@/components/ui/button'\r\n export default function TAccounts() {\r\n   const [accounts, setAccounts] = useState<string[][]>([])\r\n \r\n   const formatPastedText = (data: string) => {\r\n@@ -53,8 +53,9 @@\n                 )\r\n               })}\r\n           </TableBody>\r\n         </Table>\r\n+        <Button>清空</Button>\r\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1710335742296,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -29,8 +29,12 @@\n     const pastedText = clipboardData.getData('text')\r\n     formatPastedText(pastedText)\r\n   }\r\n \r\n+  const clear = () => { \r\n+    setAccounts([])\r\n+  }\r\n+\r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\" >\r\n         <Table>\r\n"
                },
                {
                    "date": 1710335749293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -57,9 +57,9 @@\n                 )\r\n               })}\r\n           </TableBody>\r\n         </Table>\r\n-        <Button>清空</Button>\r\n+        <Button onClick={clear}>清空</Button>\r\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1710335801107,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,64 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Button } from '@/components/ui/button'\r\n+export default function TAccounts() {\r\n+  const [accounts, setAccounts] = useState<string[][]>([])\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    accounts.push(result)\r\n+    setAccounts(result)\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => { \r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\" >\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <Button onClick={clear}>清空</Button>\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710335856067,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,9 @@\n     const result = rows.map((row) => {\r\n       const columns = row.split(',')\r\n       return columns.map((column) => column.trim())\r\n     })\r\n-    accounts.push(result)\r\n-    setAccounts(result)\r\n+    setAccounts([...result])\r\n   }\r\n \r\n   const handlePaste = (event: any) => {\r\n     const clipboardData = event.clipboardData || window.clipboardData\r\n@@ -61,69 +60,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Button } from '@/components/ui/button'\r\n-export default function TAccounts() {\r\n-  const [accounts, setAccounts] = useState<string[][]>([])\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    console.log(result);\r\n-    \r\n-    setAccounts(result)\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => { \r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\" >\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <Button onClick={clear}>清空</Button>\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710335879195,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,63 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCaption,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Button } from '@/components/ui/button'\r\n+export default function TAccounts() {\r\n+  const [accounts, setAccounts] = useState<string[][]>([])\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => { \r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\" >\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <Button onClick={clear}>清空</Button>\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710335930726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,9 +18,9 @@\n     const result = rows.map((row) => {\r\n       const columns = row.split(',')\r\n       return columns.map((column) => column.trim())\r\n     })\r\n-    setAccounts([...accounts])\r\n+    setAccounts([...result,...accounts])\r\n   }\r\n \r\n   const handlePaste = (event: any) => {\r\n     const clipboardData = event.clipboardData || window.clipboardData\r\n@@ -60,67 +60,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCaption,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Button } from '@/components/ui/button'\r\n-export default function TAccounts() {\r\n-  const [accounts, setAccounts] = useState<string[][]>([])\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => { \r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\" >\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <Button onClick={clear}>清空</Button>\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710335991300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,8 +55,9 @@\n                 )\r\n               })}\r\n           </TableBody>\r\n         </Table>\r\n+        <br />\r\n         <Button onClick={clear}>清空</Button>\r\n       </TCard>\r\n     </div>\r\n   )\r\n"
                },
                {
                    "date": 1710377047678,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -34,8 +34,9 @@\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\" >\r\n+      <Button onClick={clear}>清空</Button>\r\n         <Table>\r\n           <TableHeader>\r\n             <TableRow>\r\n               <TableHead>用户名</TableHead>\r\n@@ -56,9 +57,9 @@\n               })}\r\n           </TableBody>\r\n         </Table>\r\n         <br />\r\n-        <Button onClick={clear}>清空</Button>\r\n+        \r\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1710377116816,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -2,14 +2,15 @@\n import { useState } from 'react'\r\n import {\r\n   Table,\r\n   TableBody,\r\n-  TableCaption,\r\n   TableCell,\r\n   TableHead,\r\n   TableHeader,\r\n   TableRow,\r\n } from '@/components/ui/table'\r\n+import { Label } from \"@/components/ui/label\"\r\n+import { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\r\n import { Button } from '@/components/ui/button'\r\n export default function TAccounts() {\r\n   const [accounts, setAccounts] = useState<string[][]>([])\r\n \r\n"
                },
                {
                    "date": 1710377133199,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,19 @@\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\" >\r\n-      <Button onClick={clear}>清空</Button>\r\n+        <Button onClick={clear}>清空</Button>\r\n+        <RadioGroup defaultValue=\"option-one\">\r\n+  <div className=\"flex items-center space-x-2\">\r\n+    <RadioGroupItem value=\"option-one\" id=\"option-one\" />\r\n+    <Label htmlFor=\"option-one\">Option One</Label>\r\n+  </div>\r\n+  <div className=\"flex items-center space-x-2\">\r\n+    <RadioGroupItem value=\"option-two\" id=\"option-two\" />\r\n+    <Label htmlFor=\"option-two\">Option Two</Label>\r\n+  </div>\r\n+</RadioGroup>\r\n         <Table>\r\n           <TableHeader>\r\n             <TableRow>\r\n               <TableHead>用户名</TableHead>\r\n"
                },
                {
                    "date": 1710377139416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,10 +7,10 @@\n   TableHead,\r\n   TableHeader,\r\n   TableRow,\r\n } from '@/components/ui/table'\r\n-import { Label } from \"@/components/ui/label\"\r\n-import { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n export default function TAccounts() {\r\n   const [accounts, setAccounts] = useState<string[][]>([])\r\n \r\n@@ -19,35 +19,35 @@\n     const result = rows.map((row) => {\r\n       const columns = row.split(',')\r\n       return columns.map((column) => column.trim())\r\n     })\r\n-    setAccounts([...result,...accounts])\r\n+    setAccounts([...result, ...accounts])\r\n   }\r\n \r\n   const handlePaste = (event: any) => {\r\n     const clipboardData = event.clipboardData || window.clipboardData\r\n     const pastedText = clipboardData.getData('text')\r\n     formatPastedText(pastedText)\r\n   }\r\n \r\n-  const clear = () => { \r\n+  const clear = () => {\r\n     setAccounts([])\r\n   }\r\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\" >\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n         <Button onClick={clear}>清空</Button>\r\n         <RadioGroup defaultValue=\"option-one\">\r\n-  <div className=\"flex items-center space-x-2\">\r\n-    <RadioGroupItem value=\"option-one\" id=\"option-one\" />\r\n-    <Label htmlFor=\"option-one\">Option One</Label>\r\n-  </div>\r\n-  <div className=\"flex items-center space-x-2\">\r\n-    <RadioGroupItem value=\"option-two\" id=\"option-two\" />\r\n-    <Label htmlFor=\"option-two\">Option Two</Label>\r\n-  </div>\r\n-</RadioGroup>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"option-one\" id=\"option-one\" />\r\n+            <Label htmlFor=\"option-one\">Option One</Label>\r\n+          </div>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"option-two\" id=\"option-two\" />\r\n+            <Label htmlFor=\"option-two\">Option Two</Label>\r\n+          </div>\r\n+        </RadioGroup>\r\n         <Table>\r\n           <TableHeader>\r\n             <TableRow>\r\n               <TableHead>用户名</TableHead>\r\n@@ -68,9 +68,8 @@\n               })}\r\n           </TableBody>\r\n         </Table>\r\n         <br />\r\n-        \r\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1710377179247,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,8 +35,9 @@\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n+        <div className='flex'></div>\r\n         <Button onClick={clear}>清空</Button>\r\n         <RadioGroup defaultValue=\"option-one\">\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"option-one\" id=\"option-one\" />\r\n"
                },
                {
                    "date": 1710377186743,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n-        <div className='flex'></div>\r\n+        <div className='flex'>\r\n         <Button onClick={clear}>清空</Button>\r\n         <RadioGroup defaultValue=\"option-one\">\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"option-one\" id=\"option-one\" />\r\n@@ -47,8 +47,11 @@\n             <RadioGroupItem value=\"option-two\" id=\"option-two\" />\r\n             <Label htmlFor=\"option-two\">Option Two</Label>\r\n           </div>\r\n         </RadioGroup>\r\n+\r\n+        </div>\r\n+       \r\n         <Table>\r\n           <TableHeader>\r\n             <TableRow>\r\n               <TableHead>用户名</TableHead>\r\n"
                },
                {
                    "date": 1710377196385,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -35,9 +35,9 @@\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n-        <div className='flex'>\r\n+        <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n         <RadioGroup defaultValue=\"option-one\">\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"option-one\" id=\"option-one\" />\r\n"
                },
                {
                    "date": 1710377211809,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,79 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+export default function TAccounts() {\r\n+  const [accounts, setAccounts] = useState<string[][]>([])\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className='flex space-x-2'>\r\n+        <Button onClick={clear}>清空</Button>\r\n+        <RadioGroup defaultValue=\"option-one\">\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"option-one\" id=\"option-one\" />\r\n+            <Label htmlFor=\"option-one\">一日票</Label>\r\n+          </div>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"option-two\" id=\"option-two\" />\r\n+            <Label htmlFor=\"option-two\">Option Two</Label>\r\n+          </div>\r\n+        </RadioGroup>\r\n+\r\n+        </div>\r\n+       \r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710377222416,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"option-two\" id=\"option-two\" />\r\n-            <Label htmlFor=\"option-two\">Option Two</Label>\r\n+            <Label htmlFor=\"option-two\">早享卡</Label>\r\n           </div>\r\n         </RadioGroup>\r\n \r\n         </div>\r\n@@ -76,83 +76,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-export default function TAccounts() {\r\n-  const [accounts, setAccounts] = useState<string[][]>([])\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className='flex space-x-2'>\r\n-        <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue=\"option-one\">\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"option-one\" id=\"option-one\" />\r\n-            <Label htmlFor=\"option-one\">Option One</Label>\r\n-          </div>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"option-two\" id=\"option-two\" />\r\n-            <Label htmlFor=\"option-two\">Option Two</Label>\r\n-          </div>\r\n-        </RadioGroup>\r\n-\r\n-        </div>\r\n-       \r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710377251152,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -39,13 +39,13 @@\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n         <RadioGroup defaultValue=\"option-one\">\r\n           <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"option-one\" id=\"option-one\" />\r\n+            <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n           <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"option-two\" id=\"option-two\" />\r\n+            <RadioGroupItem value=\"1\" id=\"morning\" />\r\n             <Label htmlFor=\"option-two\">早享卡</Label>\r\n           </div>\r\n         </RadioGroup>\r\n \r\n"
                },
                {
                    "date": 1710377261228,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,9 +37,9 @@\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue=\"option-one\">\r\n+        <RadioGroup defaultValue=\"0\">\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n"
                },
                {
                    "date": 1710377285818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,11 @@\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n export default function TAccounts() {\r\n   const [accounts, setAccounts] = useState<string[][]>([])\r\n+  const [type, setType] = useState<string>('0')\r\n \r\n+\r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n     const result = rows.map((row) => {\r\n       const columns = row.split(',')\r\n@@ -37,9 +39,9 @@\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue=\"0\">\r\n+        <RadioGroup defaultValue={type}>\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n"
                },
                {
                    "date": 1710377315391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,8 +30,9 @@\n     const pastedText = clipboardData.getData('text')\r\n     formatPastedText(pastedText)\r\n   }\r\n \r\n+\r\n   const clear = () => {\r\n     setAccounts([])\r\n   }\r\n \r\n@@ -39,9 +40,9 @@\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type}>\r\n+        <RadioGroup defaultValue={type} onChange={(e)=> setType(e.target.value)}>\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n"
                },
                {
                    "date": 1710377354578,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -40,9 +40,9 @@\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type} onChange={(e)=> setType(e.target.value)}>\r\n+        <RadioGroup defaultValue={type} onChange={e => setType(e.target.value)}>\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n"
                },
                {
                    "date": 1710377364126,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,8 +33,10 @@\n \r\n \r\n   const clear = () => {\r\n     setAccounts([])\r\n+    console.log(accounts);\r\n+    \r\n   }\r\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n"
                },
                {
                    "date": 1710377419209,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,15 +42,15 @@\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type} onChange={e => setType(e.target.value)}>\r\n+        <RadioGroup defaultValue={type}>\r\n           <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+            <RadioGroupItem value=\"0\" id=\"oneday\" onSelect={e => setType(e.target.value)}/>\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n           <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+            <RadioGroupItem value=\"1\" id=\"morning\" onSelect={e => setType(e.target.value)}/>\r\n             <Label htmlFor=\"option-two\">早享卡</Label>\r\n           </div>\r\n         </RadioGroup>\r\n \r\n"
                },
                {
                    "date": 1710377471631,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -33,9 +33,12 @@\n \r\n \r\n   const clear = () => {\r\n     setAccounts([])\r\n-    console.log(accounts);\r\n+  }\r\n+\r\n+  const handleSelect = (e: any) => { \r\n+    console.log(e.target);\r\n     \r\n   }\r\n \r\n   return (\r\n@@ -44,13 +47,13 @@\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n         <RadioGroup defaultValue={type}>\r\n           <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday\" onSelect={e => setType(e.target.value)}/>\r\n+            <RadioGroupItem value=\"0\" id=\"oneday\" onSelect={handleSelect}/>\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n           <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"1\" id=\"morning\" onSelect={e => setType(e.target.value)}/>\r\n+            <RadioGroupItem value=\"1\" id=\"morning\" onSelect={handleSelect}/>\r\n             <Label htmlFor=\"option-two\">早享卡</Label>\r\n           </div>\r\n         </RadioGroup>\r\n \r\n"
                },
                {
                    "date": 1710377480705,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -37,8 +37,9 @@\n   }\r\n \r\n   const handleSelect = (e: any) => { \r\n     console.log(e.target);\r\n+    alert(e.target.value)\r\n     \r\n   }\r\n \r\n   return (\r\n"
                },
                {
                    "date": 1710377493851,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,88 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+export default function TAccounts() {\r\n+  const [accounts, setAccounts] = useState<string[][]>([])\r\n+  const [type, setType] = useState<string>('0')\r\n+\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const handleSelect = (e: any) => { \r\n+    console.log(e.target);\r\n+    alert(e.target.value)\r\n+    \r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className='flex space-x-2'>\r\n+        <Button onClick={clear}>清空</Button>\r\n+        <RadioGroup defaultValue={type} onSelect={handleSelect}>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+            <Label htmlFor=\"option-one\">一日票</Label>\r\n+          </div>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n+            <Label htmlFor=\"option-two\">早享卡</Label>\r\n+          </div>\r\n+        </RadioGroup>\r\n+\r\n+        </div>\r\n+       \r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710377501373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type} onSelect={handleSelect}>\r\n+        <RadioGroup defaultValue={type} onChange={handleSelect}>\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n@@ -85,92 +85,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-export default function TAccounts() {\r\n-  const [accounts, setAccounts] = useState<string[][]>([])\r\n-  const [type, setType] = useState<string>('0')\r\n-\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const handleSelect = (e: any) => { \r\n-    console.log(e.target);\r\n-    alert(e.target.value)\r\n-    \r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className='flex space-x-2'>\r\n-        <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type}>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday\" onSelect={handleSelect}/>\r\n-            <Label htmlFor=\"option-one\">一日票</Label>\r\n-          </div>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"1\" id=\"morning\" onSelect={handleSelect}/>\r\n-            <Label htmlFor=\"option-two\">早享卡</Label>\r\n-          </div>\r\n-        </RadioGroup>\r\n-\r\n-        </div>\r\n-       \r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710377511658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type} onChange={handleSelect}>\r\n+        <RadioGroup defaultValue={type} onClick={handleSelect}>\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n"
                },
                {
                    "date": 1710377581276,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type} onClick={handleSelect}>\r\n+        <RadioGroup defaultValue={type}>\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n"
                },
                {
                    "date": 1710377594971,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n         <RadioGroup defaultValue={type}>\r\n           <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+            <RadioGroupItem value=\"0\" id=\"oneday\" onChange={handleSelect}/>\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n"
                },
                {
                    "date": 1710377696609,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -46,9 +46,9 @@\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type}>\r\n+        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"0\" id=\"oneday\" onChange={handleSelect}/>\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n"
                },
                {
                    "date": 1710377710607,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,9 +48,9 @@\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n         <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n           <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday\" onChange={handleSelect}/>\r\n+            <RadioGroupItem value=\"0\" id=\"oneday/>\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n"
                },
                {
                    "date": 1710377745475,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -36,10 +36,10 @@\n     setAccounts([])\r\n   }\r\n \r\n   const handleSelect = (e: any) => { \r\n-    console.log(e.target);\r\n-    alert(e.target.value)\r\n+    console.log(e);\r\n+    // alert(e.target.value)\r\n     \r\n   }\r\n \r\n   return (\r\n@@ -48,9 +48,9 @@\n         <div className='flex space-x-2'>\r\n         <Button onClick={clear}>清空</Button>\r\n         <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n           <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday/>\r\n+            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n             <Label htmlFor=\"option-one\">一日票</Label>\r\n           </div>\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n"
                },
                {
                    "date": 1710377789298,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n export default function TAccounts() {\r\n   const [accounts, setAccounts] = useState<string[][]>([])\r\n-  const [type, setType] = useState<string>('0')\r\n+  const [type, setType] = useState<number>(0)\r\n \r\n \r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n@@ -35,12 +35,10 @@\n   const clear = () => {\r\n     setAccounts([])\r\n   }\r\n \r\n-  const handleSelect = (e: any) => { \r\n-    console.log(e);\r\n-    // alert(e.target.value)\r\n-    \r\n+  const handleSelect = (value: number) => { \r\n+    setType(value)\r\n   }\r\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n"
                },
                {
                    "date": 1710377804364,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+export default function TAccounts() {\r\n+  const [accounts, setAccounts] = useState<string[][]>([])\r\n+  const [type, setType] = useState<number>(0)\r\n+\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const handleSelect = (value: number) => { \r\n+    setType(value)\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className='flex space-x-2'>\r\n+        <Button onClick={clear}>清空</Button>\r\n+        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n+            <Label htmlFor=\"option-one\">一日票</Label>\r\n+          </div>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n+            <Label htmlFor=\"option-two\">早享卡</Label>\r\n+          </div>\r\n+        </RadioGroup>\r\n+        <Button onClick={clear}>准备</Button>\r\n+        </div>\r\n+       \r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710377819909,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -42,9 +42,9 @@\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n-        <div className='flex space-x-2'>\r\n+        <div className='flex space-x-2 justify-around'>\r\n         <Button onClick={clear}>清空</Button>\r\n         <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n           <div className=\"flex items-center space-x-2\">\r\n             <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n@@ -83,90 +83,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-export default function TAccounts() {\r\n-  const [accounts, setAccounts] = useState<string[][]>([])\r\n-  const [type, setType] = useState<number>(0)\r\n-\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const handleSelect = (value: number) => { \r\n-    setType(value)\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className='flex space-x-2'>\r\n-        <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n-            <Label htmlFor=\"option-one\">一日票</Label>\r\n-          </div>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n-            <Label htmlFor=\"option-two\">早享卡</Label>\r\n-          </div>\r\n-        </RadioGroup>\r\n-\r\n-        </div>\r\n-       \r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710377857532,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+export default function TAccounts() {\r\n+  const [accounts, setAccounts] = useState<string[][]>([])\r\n+  const [type, setType] = useState<number>(0)\r\n+\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const handleSelect = (value: number) => { \r\n+    setType(value)\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className='flex space-x-2 justify-around'>\r\n+        <Button onClick={clear}>清空</Button>\r\n+        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n+            <Label htmlFor=\"option-one\">一日票</Label>\r\n+          </div>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n+            <Label htmlFor=\"option-two\">早享卡</Label>\r\n+          </div>\r\n+        </RadioGroup>\r\n+        <Button onClick={clear} variant=\"destructive\">准备</Button>\r\n+        </div>\r\n+       \r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710377918584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,86 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+export default function TAccounts() {\r\n+  const [accounts, setAccounts] = useState<string[][]>([])\r\n+  const [type, setType] = useState<string>(0)\r\n+\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => { \r\n+    setType(value)\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className='flex space-x-2 justify-around'>\r\n+        <Button onClick={clear}>清空</Button>\r\n+        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n+            <Label htmlFor=\"option-one\">一日票</Label>\r\n+          </div>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n+            <Label htmlFor=\"option-two\">早享卡</Label>\r\n+          </div>\r\n+        </RadioGroup>\r\n+        <Button onClick={clear} variant=\"destructive\">准备</Button>\r\n+        </div>\r\n+       \r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710377934680,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -12,9 +12,9 @@\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n export default function TAccounts() {\r\n   const [accounts, setAccounts] = useState<string[][]>([])\r\n-  const [type, setType] = useState<string>(0)\r\n+  const [type, setType] = useState<string>(\"0\")\r\n \r\n \r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n"
                },
                {
                    "date": 1710379843395,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,9 +54,9 @@\n             <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n             <Label htmlFor=\"option-two\">早享卡</Label>\r\n           </div>\r\n         </RadioGroup>\r\n-        <Button onClick={clear} variant=\"destructive\">准备</Button>\r\n+        <Button onClick={submit} variant=\"destructive\">准备</Button>\r\n         </div>\r\n        \r\n         <Table>\r\n           <TableHeader>\r\n@@ -83,176 +83,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-export default function TAccounts() {\r\n-  const [accounts, setAccounts] = useState<string[][]>([])\r\n-  const [type, setType] = useState<number>(0)\r\n-\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const handleSelect = (value: number) => { \r\n-    setType(value)\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className='flex space-x-2 justify-around'>\r\n-        <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n-            <Label htmlFor=\"option-one\">一日票</Label>\r\n-          </div>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n-            <Label htmlFor=\"option-two\">早享卡</Label>\r\n-          </div>\r\n-        </RadioGroup>\r\n-        <Button onClick={clear} variant=\"destructive\">准备</Button>\r\n-        </div>\r\n-       \r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-export default function TAccounts() {\r\n-  const [accounts, setAccounts] = useState<string[][]>([])\r\n-  const [type, setType] = useState<number>(0)\r\n-\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const handleSelect = (value: number) => { \r\n-    setType(value)\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className='flex space-x-2 justify-around'>\r\n-        <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n-            <Label htmlFor=\"option-one\">一日票</Label>\r\n-          </div>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n-            <Label htmlFor=\"option-two\">早享卡</Label>\r\n-          </div>\r\n-        </RadioGroup>\r\n-        <Button onClick={clear}>准备</Button>\r\n-        </div>\r\n-       \r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710379848726,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,90 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+export default function TAccounts() {\r\n+  const [accounts, setAccounts] = useState<string[][]>([])\r\n+  const [type, setType] = useState<string>(\"0\")\r\n+\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    console.log(accounts)\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => { \r\n+    setType(value)\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className='flex space-x-2 justify-around'>\r\n+        <Button onClick={clear}>清空</Button>\r\n+        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n+            <Label htmlFor=\"option-one\">一日票</Label>\r\n+          </div>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n+            <Label htmlFor=\"option-two\">早享卡</Label>\r\n+          </div>\r\n+        </RadioGroup>\r\n+        <Button onClick={submit} variant=\"destructive\">准备</Button>\r\n+        </div>\r\n+       \r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710379895826,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { Label } from '@/components/ui/label'\r\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n export default function TAccounts() {\r\n-  const [accounts, setAccounts] = useState<string[][]>([])\r\n+const [accounts, setAccounts] = useState<string[][]>([[\"\"]])\r\n   const [type, setType] = useState<string>(\"0\")\r\n \r\n \r\n   const formatPastedText = (data: string) => {\r\n@@ -87,90 +87,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-export default function TAccounts() {\r\n-  const [accounts, setAccounts] = useState<string[][]>([])\r\n-  const [type, setType] = useState<string>(\"0\")\r\n-\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => { \r\n-    setType(value)\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className='flex space-x-2 justify-around'>\r\n-        <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n-            <Label htmlFor=\"option-one\">一日票</Label>\r\n-          </div>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n-            <Label htmlFor=\"option-two\">早享卡</Label>\r\n-          </div>\r\n-        </RadioGroup>\r\n-        <Button onClick={submit} variant=\"destructive\">准备</Button>\r\n-        </div>\r\n-       \r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710379901146,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { Label } from '@/components/ui/label'\r\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n export default function TAccounts() {\r\n-const [accounts, setAccounts] = useState<string[][]>([[\"\"]])\r\n+const [accounts, setAccounts] = useState<string[][]>([[\"13127778188,520521jn,222403198502200011\"]])\r\n   const [type, setType] = useState<string>(\"0\")\r\n \r\n \r\n   const formatPastedText = (data: string) => {\r\n"
                },
                {
                    "date": 1710379913944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { Label } from '@/components/ui/label'\r\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n export default function TAccounts() {\r\n-const [accounts, setAccounts] = useState<string[][]>([[\"13127778188,520521jn,222403198502200011\"]])\r\n+const [accounts, setAccounts] = useState<string[][]>([[\"13127778188\",\"520521jn\",\"222403198502200011\"\"]])\r\n   const [type, setType] = useState<string>(\"0\")\r\n \r\n \r\n   const formatPastedText = (data: string) => {\r\n"
                },
                {
                    "date": 1710379919539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,90 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+export default function TAccounts() {\r\n+const [accounts, setAccounts] = useState<string[][]>([[\"13127778188\",\"520521jn\",\"222403198502200011\"]])\r\n+  const [type, setType] = useState<string>(\"0\")\r\n+\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    console.log(accounts)\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => { \r\n+    setType(value)\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className='flex space-x-2 justify-around'>\r\n+        <Button onClick={clear}>清空</Button>\r\n+        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n+            <Label htmlFor=\"option-one\">一日票</Label>\r\n+          </div>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n+            <Label htmlFor=\"option-two\">早享卡</Label>\r\n+          </div>\r\n+        </RadioGroup>\r\n+        <Button onClick={submit} variant=\"destructive\">准备</Button>\r\n+        </div>\r\n+       \r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710379926906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { Label } from '@/components/ui/label'\r\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n export default function TAccounts() {\r\n-const [accounts, setAccounts] = useState<string[][]>([[\"13127778188\",\"520521jn\",\"222403198502200011\"]])\r\n+const [accounts, setAccounts] = useState<string[][]>([[\"13127778188\",\"520521jn\",\"222403198502200011\"],[\"13127778188\",\"520521jn\",\"222403198502200011\"]])\r\n   const [type, setType] = useState<string>(\"0\")\r\n \r\n \r\n   const formatPastedText = (data: string) => {\r\n@@ -87,94 +87,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-export default function TAccounts() {\r\n-const [accounts, setAccounts] = useState<string[][]>([[\"13127778188\",\"520521jn\",\"222403198502200011\"\"]])\r\n-  const [type, setType] = useState<string>(\"0\")\r\n-\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    console.log(accounts)\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => { \r\n-    setType(value)\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className='flex space-x-2 justify-around'>\r\n-        <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n-            <Label htmlFor=\"option-one\">一日票</Label>\r\n-          </div>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n-            <Label htmlFor=\"option-two\">早享卡</Label>\r\n-          </div>\r\n-        </RadioGroup>\r\n-        <Button onClick={submit} variant=\"destructive\">准备</Button>\r\n-        </div>\r\n-       \r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710380036795,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,8 +10,9 @@\n } from '@/components/ui/table'\r\n import { Label } from '@/components/ui/label'\r\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n export default function TAccounts() {\r\n const [accounts, setAccounts] = useState<string[][]>([[\"13127778188\",\"520521jn\",\"222403198502200011\"],[\"13127778188\",\"520521jn\",\"222403198502200011\"]])\r\n   const [type, setType] = useState<string>(\"0\")\r\n \r\n@@ -36,9 +37,9 @@\n     setAccounts([])\r\n   }\r\n \r\n   const submit = () => {\r\n-    console.log(accounts)\r\n+    const resposne = axios.post('/api/prepare', {})\r\n   }\r\n \r\n   const handleSelect = (value: string) => { \r\n     setType(value)\r\n"
                },
                {
                    "date": 1710380064581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,95 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+export default function TAccounts() {\r\n+const [accounts, setAccounts] = useState<string[][]>([[\"13127778188\",\"520521jn\",\"222403198502200011\"],[\"13127778188\",\"520521jn\",\"222403198502200011\"]])\r\n+  const [type, setType] = useState<string>(\"0\")\r\n+\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: accounts\r\n+    }\r\n+    const resposne = axios.post('/api/prepare', {})\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => { \r\n+    setType(value)\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className='flex space-x-2 justify-around'>\r\n+        <Button onClick={clear}>清空</Button>\r\n+        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n+            <Label htmlFor=\"option-one\">一日票</Label>\r\n+          </div>\r\n+          <div className=\"flex items-center space-x-2\">\r\n+            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n+            <Label htmlFor=\"option-two\">早享卡</Label>\r\n+          </div>\r\n+        </RadioGroup>\r\n+        <Button onClick={submit} variant=\"destructive\">准备</Button>\r\n+        </div>\r\n+       \r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710380165735,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,8 +11,9 @@\n import { Label } from '@/components/ui/label'\r\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n import axios from 'axios'\r\n+import { Account } from '@/lib/utils'\r\n export default function TAccounts() {\r\n const [accounts, setAccounts] = useState<string[][]>([[\"13127778188\",\"520521jn\",\"222403198502200011\"],[\"13127778188\",\"520521jn\",\"222403198502200011\"]])\r\n   const [type, setType] = useState<string>(\"0\")\r\n \r\n@@ -41,8 +42,10 @@\n     const data = {\r\n       type: type,\r\n       accounts: accounts\r\n     }\r\n+    console.log(accounts);\r\n+    \r\n     const resposne = axios.post('/api/prepare', {})\r\n   }\r\n \r\n   const handleSelect = (value: string) => { \r\n@@ -92,95 +95,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-export default function TAccounts() {\r\n-const [accounts, setAccounts] = useState<string[][]>([[\"13127778188\",\"520521jn\",\"222403198502200011\"],[\"13127778188\",\"520521jn\",\"222403198502200011\"]])\r\n-  const [type, setType] = useState<string>(\"0\")\r\n-\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const resposne = axios.post('/api/prepare', {})\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => { \r\n-    setType(value)\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className='flex space-x-2 justify-around'>\r\n-        <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n-            <Label htmlFor=\"option-one\">一日票</Label>\r\n-          </div>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n-            <Label htmlFor=\"option-two\">早享卡</Label>\r\n-          </div>\r\n-        </RadioGroup>\r\n-        <Button onClick={submit} variant=\"destructive\">准备</Button>\r\n-        </div>\r\n-       \r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710380300226,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -38,8 +38,16 @@\n     setAccounts([])\r\n   }\r\n \r\n   const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        username: account[0],\r\n+        password: account[1],\r\n+        idcard: account[2],\r\n+        date: account[2]\r\n+      }\r\n+     })\r\n     const data = {\r\n       type: type,\r\n       accounts: accounts\r\n     }\r\n"
                },
                {
                    "date": 1710380320282,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,12 +13,14 @@\n import { Button } from '@/components/ui/button'\r\n import axios from 'axios'\r\n import { Account } from '@/lib/utils'\r\n export default function TAccounts() {\r\n-const [accounts, setAccounts] = useState<string[][]>([[\"13127778188\",\"520521jn\",\"222403198502200011\"],[\"13127778188\",\"520521jn\",\"222403198502200011\"]])\r\n-  const [type, setType] = useState<string>(\"0\")\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    ['13127778188', '520521jn', '222403198502200011'],\r\n+    ['13127778188', '520521jn', '222403198502200011'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('0')\r\n \r\n-\r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n     const result = rows.map((row) => {\r\n       const columns = row.split(',')\r\n@@ -32,9 +34,8 @@\n     const pastedText = clipboardData.getData('text')\r\n     formatPastedText(pastedText)\r\n   }\r\n \r\n-\r\n   const clear = () => {\r\n     setAccounts([])\r\n   }\r\n \r\n@@ -43,42 +44,44 @@\n       return {\r\n         username: account[0],\r\n         password: account[1],\r\n         idcard: account[2],\r\n-        date: account[2]\r\n+        date: account[2],\r\n       }\r\n-     })\r\n+    })\r\n     const data = {\r\n       type: type,\r\n-      accounts: accounts\r\n+      accounts: accounts,\r\n     }\r\n-    console.log(accounts);\r\n-    \r\n+    console.log(accounts)\r\n+\r\n     const resposne = axios.post('/api/prepare', {})\r\n   }\r\n \r\n-  const handleSelect = (value: string) => { \r\n+  const handleSelect = (value: string) => {\r\n     setType(value)\r\n   }\r\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <TCard title=\"把账户粘贴到这里\">\r\n-        <div className='flex space-x-2 justify-around'>\r\n-        <Button onClick={clear}>清空</Button>\r\n-        <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"0\" id=\"oneday\"/>\r\n-            <Label htmlFor=\"option-one\">一日票</Label>\r\n-          </div>\r\n-          <div className=\"flex items-center space-x-2\">\r\n-            <RadioGroupItem value=\"1\" id=\"morning\"/>\r\n-            <Label htmlFor=\"option-two\">早享卡</Label>\r\n-          </div>\r\n-        </RadioGroup>\r\n-        <Button onClick={submit} variant=\"destructive\">准备</Button>\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button onClick={submit} variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n         </div>\r\n-       \r\n+\r\n         <Table>\r\n           <TableHeader>\r\n             <TableRow>\r\n               <TableHead>用户名</TableHead>\r\n"
                },
                {
                    "date": 1710380329905,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -49,13 +49,13 @@\n       }\r\n     })\r\n     const data = {\r\n       type: type,\r\n-      accounts: accounts,\r\n+      accounts: formatedAccounts,\r\n     }\r\n     console.log(accounts)\r\n \r\n-    const resposne = axios.post('/api/prepare', {})\r\n+    const resposne = axios.post('/api/prepare', {data})\r\n   }\r\n \r\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n"
                },
                {
                    "date": 1710380336331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n       accounts: formatedAccounts,\r\n     }\r\n     console.log(accounts)\r\n \r\n-    const resposne = axios.post('/api/prepare', {data})\r\n+    // const resposne = axios.post('/api/prepare', {data})\r\n   }\r\n \r\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n"
                },
                {
                    "date": 1710380345300,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,9 +51,9 @@\n     const data = {\r\n       type: type,\r\n       accounts: formatedAccounts,\r\n     }\r\n-    console.log(accounts)\r\n+    console.log(formatedAccounts)\r\n \r\n     // const resposne = axios.post('/api/prepare', {data})\r\n   }\r\n \r\n"
                },
                {
                    "date": 1710380401584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n       accounts: formatedAccounts,\r\n     }\r\n     console.log(formatedAccounts)\r\n \r\n-    // const resposne = axios.post('/api/prepare', {data})\r\n+    const resposne = axios.post('/api/prepare', {data})\r\n   }\r\n \r\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n"
                },
                {
                    "date": 1710380407106,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,11 @@\n       accounts: formatedAccounts,\r\n     }\r\n     console.log(formatedAccounts)\r\n \r\n-    const resposne = axios.post('/api/prepare', {data})\r\n+    const resposne = axios.post('/api/prepare', { data })\r\n+    console.log(resposne);\r\n+    \r\n   }\r\n \r\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n"
                },
                {
                    "date": 1710380623013,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { Label } from '@/components/ui/label'\r\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n import axios from 'axios'\r\n-import { Account } from '@/lib/utils'\r\n+import { API } from '@/lib/api'\r\n export default function TAccounts() {\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     ['13127778188', '520521jn', '222403198502200011'],\r\n     ['13127778188', '520521jn', '222403198502200011'],\r\n"
                },
                {
                    "date": 1710380630280,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n       accounts: formatedAccounts,\r\n     }\r\n     console.log(formatedAccounts)\r\n \r\n-    const resposne = axios.post('/api/prepare', { data })\r\n+    const resposne = API.post('/api/prepare', { data })\r\n     console.log(resposne);\r\n     \r\n   }\r\n \r\n"
                },
                {
                    "date": 1710380680078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,9 +11,9 @@\n import { Label } from '@/components/ui/label'\r\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n import axios from 'axios'\r\n-import { API } from '@/lib/api'\r\n+import API from '@/lib/api'\r\n export default function TAccounts() {\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     ['13127778188', '520521jn', '222403198502200011'],\r\n     ['13127778188', '520521jn', '222403198502200011'],\r\n"
                },
                {
                    "date": 1710380727632,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n       accounts: formatedAccounts,\r\n     }\r\n     console.log(formatedAccounts)\r\n \r\n-    const resposne = API.post('/api/prepare', { data })\r\n+    const resposne = API.post('/api/prepare', {data})\r\n     console.log(resposne);\r\n     \r\n   }\r\n \r\n"
                },
                {
                    "date": 1710380752269,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -53,9 +53,9 @@\n       accounts: formatedAccounts,\r\n     }\r\n     console.log(formatedAccounts)\r\n \r\n-    const resposne = API.post('/api/prepare', {data})\r\n+    const resposne = API.post('/api/prepare', {...data})\r\n     console.log(resposne);\r\n     \r\n   }\r\n \r\n"
                },
                {
                    "date": 1710380765803,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -44,9 +44,9 @@\n       return {\r\n         username: account[0],\r\n         password: account[1],\r\n         idcard: account[2],\r\n-        date: account[2],\r\n+        date: account[3],\r\n       }\r\n     })\r\n     const data = {\r\n       type: type,\r\n"
                },
                {
                    "date": 1710380776761,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -88,8 +88,9 @@\n             <TableRow>\r\n               <TableHead>用户名</TableHead>\r\n               <TableHead>密码</TableHead>\r\n               <TableHead>身份证</TableHead>\r\n+              <TableHead>预定时间</TableHead>\r\n             </TableRow>\r\n           </TableHeader>\r\n           <TableBody>\r\n             {accounts &&\r\n"
                },
                {
                    "date": 1710380788581,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import API from '@/lib/api'\r\n+export default function TAccounts() {\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    ['13127778188', '520521jn', '222403198502200011'],\r\n+    ['13127778188', '520521jn', '222403198502200011'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('0')\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        username: account[0],\r\n+        password: account[1],\r\n+        idcard: account[2],\r\n+        date: account[3],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    console.log(formatedAccounts)\r\n+\r\n+    const resposne = API.post('/api/prepare', {...data})\r\n+    console.log(resposne);\r\n+    \r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button onClick={submit} variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>预定时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710380795445,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import API from '@/lib/api'\r\n+export default function TAccounts() {\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    ['13127778188', '520521jn', '222403198502200011'],\r\n+    ['13127778188', '520521jn', '222403198502200011'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('0')\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        username: account[0],\r\n+        password: account[1],\r\n+        idcard: account[2],\r\n+        date: account[3],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    console.log(formatedAccounts)\r\n+\r\n+    const resposne = API.post('/api/prepare', {...data})\r\n+    console.log(resposne);\r\n+    \r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button onClick={submit} variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710380845301,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,113 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import API from '@/lib/api'\r\n+export default function TAccounts() {\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    ['13127778188', '520521jn', '222403198502200011','2024-03-03'],\r\n+    ['13127778188', '520521jn', '222403198502200011','2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('0')\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        username: account[0],\r\n+        password: account[1],\r\n+        idcard: account[2],\r\n+        date: account[3],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    console.log(formatedAccounts)\r\n+\r\n+    const resposne = API.post('/api/prepare', {...data})\r\n+    console.log(resposne);\r\n+    \r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button onClick={submit} variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710380941293,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -51,10 +51,8 @@\n     const data = {\r\n       type: type,\r\n       accounts: formatedAccounts,\r\n     }\r\n-    console.log(formatedAccounts)\r\n-\r\n     const resposne = API.post('/api/prepare', {...data})\r\n     console.log(resposne);\r\n     \r\n   }\r\n@@ -110,342 +108,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import API from '@/lib/api'\r\n-export default function TAccounts() {\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    ['13127778188', '520521jn', '222403198502200011'],\r\n-    ['13127778188', '520521jn', '222403198502200011'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('0')\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        username: account[0],\r\n-        password: account[1],\r\n-        idcard: account[2],\r\n-        date: account[3],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    console.log(formatedAccounts)\r\n-\r\n-    const resposne = API.post('/api/prepare', {...data})\r\n-    console.log(resposne);\r\n-    \r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button onClick={submit} variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import API from '@/lib/api'\r\n-export default function TAccounts() {\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    ['13127778188', '520521jn', '222403198502200011'],\r\n-    ['13127778188', '520521jn', '222403198502200011'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('0')\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        username: account[0],\r\n-        password: account[1],\r\n-        idcard: account[2],\r\n-        date: account[3],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    console.log(formatedAccounts)\r\n-\r\n-    const resposne = API.post('/api/prepare', {...data})\r\n-    console.log(resposne);\r\n-    \r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button onClick={submit} variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>预定时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import API from '@/lib/api'\r\n-export default function TAccounts() {\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    ['13127778188', '520521jn', '222403198502200011'],\r\n-    ['13127778188', '520521jn', '222403198502200011'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('0')\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        username: account[0],\r\n-        password: account[1],\r\n-        idcard: account[2],\r\n-        date: account[3],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    console.log(formatedAccounts)\r\n-\r\n-    const resposne = API.post('/api/prepare', {...data})\r\n-    console.log(resposne);\r\n-    \r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button onClick={submit} variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>预定时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710381030084,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -11,10 +11,12 @@\n import { Label } from '@/components/ui/label'\r\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n import API from '@/lib/api'\r\n export default function TAccounts() {\r\n+  const { toast } = useToast()\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     ['13127778188', '520521jn', '222403198502200011','2024-03-03'],\r\n     ['13127778188', '520521jn', '222403198502200011','2024-03-03'],\r\n   ])\r\n@@ -52,9 +54,11 @@\n       type: type,\r\n       accounts: formatedAccounts,\r\n     }\r\n     const resposne = API.post('/api/prepare', {...data})\r\n-    console.log(resposne);\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n     \r\n   }\r\n \r\n   const handleSelect = (value: string) => {\r\n@@ -62,8 +66,9 @@\n   }\r\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className=\"flex space-x-2 justify-around\">\r\n           <Button onClick={clear}>清空</Button>\r\n           <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n"
                },
                {
                    "date": 1710381044411,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,9 @@\n   TableHead,\r\n   TableHeader,\r\n   TableRow,\r\n } from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n import { Label } from '@/components/ui/label'\r\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n import axios from 'axios'\r\n"
                },
                {
                    "date": 1710381127642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -54,12 +54,12 @@\n     const data = {\r\n       type: type,\r\n       accounts: formatedAccounts,\r\n     }\r\n-    const resposne = API.post('/api/prepare', {...data})\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n+    API.post('/api/prepare', {...data})\r\n+    // toast({\r\n+    //   description: '任务创建成功',\r\n+    // })\r\n     \r\n   }\r\n \r\n   const handleSelect = (value: string) => {\r\n"
                },
                {
                    "date": 1710381200497,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,118 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+export default function TAccounts() {\r\n+  const { toast } = useToast()\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    ['13127778188', '520521jn', '222403198502200011','2024-03-03'],\r\n+    ['13127778188', '520521jn', '222403198502200011','2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('0')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      const columns = row.split(',')\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        username: account[0],\r\n+        password: account[1],\r\n+        idcard: account[2],\r\n+        date: account[3],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    \r\n+    // toast({\r\n+    //   description: '任务创建成功',\r\n+    // })\r\n+    \r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button onClick={submit} variant=\"destructive\" disabled={disabledButton}>\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index}>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710381208915,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n       type: type,\r\n       accounts: formatedAccounts,\r\n     }\r\n     API.post('/api/prepare', { ...data })\r\n-    \r\n+    setDisabledButton(true)\r\n     // toast({\r\n     //   description: '任务创建成功',\r\n     // })\r\n     \r\n@@ -115,121 +115,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-export default function TAccounts() {\r\n-  const { toast } = useToast()\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    ['13127778188', '520521jn', '222403198502200011','2024-03-03'],\r\n-    ['13127778188', '520521jn', '222403198502200011','2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('0')\r\n-\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        username: account[0],\r\n-        password: account[1],\r\n-        idcard: account[2],\r\n-        date: account[3],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', {...data})\r\n-    // toast({\r\n-    //   description: '任务创建成功',\r\n-    // })\r\n-    \r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button onClick={submit} variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710381506610,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,9 +20,9 @@\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     ['13127778188', '520521jn', '222403198502200011','2024-03-03'],\r\n     ['13127778188', '520521jn', '222403198502200011','2024-03-03'],\r\n   ])\r\n-  const [type, setType] = useState<string>('0')\r\n+  const [type, setType] = useState<string>('1')\r\n   const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n     const result = rows.map((row) => {\r\n"
                },
                {
                    "date": 1710394201331,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -90,8 +90,9 @@\n \r\n         <Table>\r\n           <TableHeader>\r\n             <TableRow>\r\n+              <TableHead>ID</TableHead>\r\n               <TableHead>用户名</TableHead>\r\n               <TableHead>密码</TableHead>\r\n               <TableHead>身份证</TableHead>\r\n               <TableHead>时间</TableHead>\r\n"
                },
                {
                    "date": 1710394399076,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,20 +14,22 @@\n import { Button } from '@/components/ui/button'\r\n import axios from 'axios'\r\n import { useToast } from '@/components/ui/use-toast'\r\n import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n export default function TAccounts() {\r\n   const { toast } = useToast()\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n-    ['13127778188', '520521jn', '222403198502200011','2024-03-03'],\r\n-    ['13127778188', '520521jn', '222403198502200011','2024-03-03'],\r\n+    ['13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    ['13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n   ])\r\n   const [type, setType] = useState<string>('1')\r\n   const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n     const result = rows.map((row) => {\r\n-      const columns = row.split(',')\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n       return columns.map((column) => column.trim())\r\n     })\r\n     setAccounts([...result, ...accounts])\r\n   }\r\n@@ -59,9 +61,8 @@\n     setDisabledButton(true)\r\n     // toast({\r\n     //   description: '任务创建成功',\r\n     // })\r\n-    \r\n   }\r\n \r\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n@@ -82,9 +83,12 @@\n               <RadioGroupItem value=\"1\" id=\"morning\" />\r\n               <Label htmlFor=\"option-two\">早享卡</Label>\r\n             </div>\r\n           </RadioGroup>\r\n-          <Button onClick={submit} variant=\"destructive\" disabled={disabledButton}>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\"\r\n+            disabled={disabledButton}>\r\n             准备\r\n           </Button>\r\n         </div>\r\n \r\n"
                },
                {
                    "date": 1710394474976,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,8 +27,10 @@\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n     const result = rows.map((row) => {\r\n       let columns = row.split(',')\r\n+      console.log(uuidv4());\r\n+      \r\n       columns.unshift(uuidv4())\r\n       return columns.map((column) => column.trim())\r\n     })\r\n     setAccounts([...result, ...accounts])\r\n"
                },
                {
                    "date": 1710394550473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -48,12 +48,13 @@\n \r\n   const submit = () => {\r\n     const formatedAccounts = accounts.map((account) => {\r\n       return {\r\n-        username: account[0],\r\n-        password: account[1],\r\n-        idcard: account[2],\r\n-        date: account[3],\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n       }\r\n     })\r\n     const data = {\r\n       type: type,\r\n"
                },
                {
                    "date": 1710394574265,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -97,9 +97,8 @@\n \r\n         <Table>\r\n           <TableHeader>\r\n             <TableRow>\r\n-              <TableHead>ID</TableHead>\r\n               <TableHead>用户名</TableHead>\r\n               <TableHead>密码</TableHead>\r\n               <TableHead>身份证</TableHead>\r\n               <TableHead>时间</TableHead>\r\n@@ -109,12 +108,12 @@\n             {accounts &&\r\n               accounts.map((account: string[], index: number) => {\r\n                 return (\r\n                   <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n                     <TableCell>{account[2]}</TableCell>\r\n                     <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n                   </TableRow>\r\n                 )\r\n               })}\r\n           </TableBody>\r\n"
                },
                {
                    "date": 1710394586764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,12 +108,12 @@\n             {accounts &&\r\n               accounts.map((account: string[], index: number) => {\r\n                 return (\r\n                   <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n+                    <TableCell>{account[1]}</TableCell>\r\n                     <TableCell>{account[2]}</TableCell>\r\n                     <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n                   </TableRow>\r\n                 )\r\n               })}\r\n           </TableBody>\r\n"
                },
                {
                    "date": 1710394643348,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,10 +18,10 @@\n import { v4 as uuidv4 } from 'uuid';\r\n export default function TAccounts() {\r\n   const { toast } = useToast()\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n-    ['13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    ['13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n   ])\r\n   const [type, setType] = useState<string>('1')\r\n   const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n   const formatPastedText = (data: string) => {\r\n@@ -108,12 +108,12 @@\n             {accounts &&\r\n               accounts.map((account: string[], index: number) => {\r\n                 return (\r\n                   <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[0]}</TableCell>\r\n-                    <TableCell>{account[1]}</TableCell>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n                     <TableCell>{account[2]}</TableCell>\r\n                     <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n                   </TableRow>\r\n                 )\r\n               })}\r\n           </TableBody>\r\n"
                },
                {
                    "date": 1710394676373,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,10 +27,8 @@\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n     const result = rows.map((row) => {\r\n       let columns = row.split(',')\r\n-      console.log(uuidv4());\r\n-      \r\n       columns.unshift(uuidv4())\r\n       return columns.map((column) => column.trim())\r\n     })\r\n     setAccounts([...result, ...accounts])\r\n"
                },
                {
                    "date": 1710396428524,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,8 +43,12 @@\n   const clear = () => {\r\n     setAccounts([])\r\n   }\r\n \r\n+  const rest = () => {\r\n+    API.post('/api/rest', {})\r\n+   }\r\n+\r\n   const submit = () => {\r\n     const formatedAccounts = accounts.map((account) => {\r\n       return {\r\n         id: account[0],\r\n"
                },
                {
                    "date": 1710396474701,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -43,11 +43,9 @@\n   const clear = () => {\r\n     setAccounts([])\r\n   }\r\n \r\n-  const rest = () => {\r\n-    API.post('/api/rest', {})\r\n-   }\r\n+ \r\n \r\n   const submit = () => {\r\n     const formatedAccounts = accounts.map((account) => {\r\n       return {\r\n"
                },
                {
                    "date": 1710397023968,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n             {accounts &&\r\n               accounts.map((account: string[], index: number) => {\r\n                 return (\r\n                   <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell className=\"font-medium bg-slate-400\">{account[1]}</TableCell>\r\n                     <TableCell>{account[2]}</TableCell>\r\n                     <TableCell>{account[3]}</TableCell>\r\n                     <TableCell>{account[4]}</TableCell>\r\n                   </TableRow>\r\n"
                },
                {
                    "date": 1710397033482,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -108,9 +108,9 @@\n             {accounts &&\r\n               accounts.map((account: string[], index: number) => {\r\n                 return (\r\n                   <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium bg-slate-400\">{account[1]}</TableCell>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n                     <TableCell>{account[2]}</TableCell>\r\n                     <TableCell>{account[3]}</TableCell>\r\n                     <TableCell>{account[4]}</TableCell>\r\n                   </TableRow>\r\n"
                },
                {
                    "date": 1710397039205,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,125 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+export default function TAccounts() {\r\n+  const { toast } = useToast()\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+ \r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    // toast({\r\n+    //   description: '任务创建成功',\r\n+    // })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\"\r\n+            disabled={disabledButton}>\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className='bg-slate-400'>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710397111603,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,131 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+export default function TAccounts() {\r\n+  const { toast } = useToast()\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+ \r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    // toast({\r\n+    //   description: '任务创建成功',\r\n+    // })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+\r\n+  const colorRow = (status) => { \r\n+    if (status == \"执行中\") {\r\n+        return \"bg-green-400\"\r\n+      }\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\"\r\n+            disabled={disabledButton}>\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className='bg-slate-400'>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710397197233,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import axios from 'axios'\r\n import { useToast } from '@/components/ui/use-toast'\r\n import API from '@/lib/api'\r\n import { v4 as uuidv4 } from 'uuid';\r\n-export default function TAccounts() {\r\n+export default function TAccounts({ ready }: { ready: string }) {\r\n   const { toast } = useToast()\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n@@ -113,9 +113,9 @@\n           <TableBody>\r\n             {accounts &&\r\n               accounts.map((account: string[], index: number) => {\r\n                 return (\r\n-                  <TableRow key={index} className='bg-slate-400'>\r\n+                  <TableRow key={index} className={colorRow(account)}>\r\n                     <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n                     <TableCell>{account[2]}</TableCell>\r\n                     <TableCell>{account[3]}</TableCell>\r\n                     <TableCell>{account[4]}</TableCell>\r\n@@ -128,254 +128,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-export default function TAccounts() {\r\n-  const { toast } = useToast()\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n- \r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    // toast({\r\n-    //   description: '任务创建成功',\r\n-    // })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\"\r\n-            disabled={disabledButton}>\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className='bg-slate-400'>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-export default function TAccounts() {\r\n-  const { toast } = useToast()\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n- \r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    // toast({\r\n-    //   description: '任务创建成功',\r\n-    // })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\"\r\n-            disabled={disabledButton}>\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710397277059,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import axios from 'axios'\r\n import { useToast } from '@/components/ui/use-toast'\r\n import API from '@/lib/api'\r\n import { v4 as uuidv4 } from 'uuid';\r\n-export default function TAccounts({ ready }: { ready: string }) {\r\n+export default function TAccounts({ ready }: { ready: any }) {\r\n   const { toast } = useToast()\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n"
                },
                {
                    "date": 1710397286599,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,8 +80,11 @@\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n       <TCard title=\"把账户粘贴到这里\">\r\n+        <div>\r\n+          {ready}\r\n+        </div>\r\n         <div className=\"flex space-x-2 justify-around\">\r\n           <Button onClick={clear}>清空</Button>\r\n           <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n             <div className=\"flex items-center space-x-2\">\r\n"
                },
                {
                    "date": 1710397294131,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -81,9 +81,9 @@\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div>\r\n-          {ready}\r\n+          {ready}asfasdfd\r\n         </div>\r\n         <div className=\"flex space-x-2 justify-around\">\r\n           <Button onClick={clear}>清空</Button>\r\n           <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n"
                },
                {
                    "date": 1710397332118,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import axios from 'axios'\r\n import { useToast } from '@/components/ui/use-toast'\r\n import API from '@/lib/api'\r\n import { v4 as uuidv4 } from 'uuid';\r\n-export default function TAccounts({ ready }: { ready: any }) {\r\n+export default function TAccounts({ ready }: { ready: [] }) {\r\n   const { toast } = useToast()\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n@@ -81,9 +81,9 @@\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div>\r\n-          {ready}asfasdfd\r\n+          {ready}\r\n         </div>\r\n         <div className=\"flex space-x-2 justify-around\">\r\n           <Button onClick={clear}>清空</Button>\r\n           <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n"
                },
                {
                    "date": 1710397339002,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import axios from 'axios'\r\n import { useToast } from '@/components/ui/use-toast'\r\n import API from '@/lib/api'\r\n import { v4 as uuidv4 } from 'uuid';\r\n-export default function TAccounts({ ready }: { ready: [] }) {\r\n+export default function TAccounts({ ready }: { ready: any[] }) {\r\n   const { toast } = useToast()\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n"
                },
                {
                    "date": 1710397400493,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n import axios from 'axios'\r\n import { useToast } from '@/components/ui/use-toast'\r\n import API from '@/lib/api'\r\n import { v4 as uuidv4 } from 'uuid';\r\n-export default function TAccounts({ ready }: { ready: any[] }) {\r\n+export default function TAccounts({ ready }) {\r\n   const { toast } = useToast()\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n"
                },
                {
                    "date": 1710397528912,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,11 @@\n import axios from 'axios'\r\n import { useToast } from '@/components/ui/use-toast'\r\n import API from '@/lib/api'\r\n import { v4 as uuidv4 } from 'uuid';\r\n-export default function TAccounts({ ready }) {\r\n+\r\n+import { IDAccount } from '@/lib/utils'\r\n+export default function TAccounts({ ready } : { ready: IDAccount[] }) {\r\n   const { toast } = useToast()\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n"
                },
                {
                    "date": 1710397572362,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,138 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+\r\n+import { IDAccount } from '@/lib/utils'\r\n+export default function TAccounts({ ready } : { ready: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+ \r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    // toast({\r\n+    //   description: '任务创建成功',\r\n+    // })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+\r\n+  const colorRow = (status) => { \r\n+    if (status == \"执行中\") {\r\n+        return \"bg-green-400\"\r\n+      }\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div>\r\n+          {ready.map((account: IDAccount) => {\r\n+            return \"<div>account.id</div>\"\r\n+          })}\r\n+        </div>\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\"\r\n+            disabled={disabledButton}>\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={colorRow(account)}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710397607135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n       <Toaster />\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div>\r\n           {ready.map((account: IDAccount) => {\r\n-            return \"<div>account.id</div>\"\r\n+            return <div>account.id</div>\r\n           })}\r\n         </div>\r\n         <div className=\"flex space-x-2 justify-around\">\r\n           <Button onClick={clear}>清空</Button>\r\n@@ -135,140 +135,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-\r\n-import { IDAccount } from '@/lib/utils'\r\n-export default function TAccounts({ ready } : { ready: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n- \r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    // toast({\r\n-    //   description: '任务创建成功',\r\n-    // })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-\r\n-  const colorRow = (status) => { \r\n-    if (status == \"执行中\") {\r\n-        return \"bg-green-400\"\r\n-      }\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div>\r\n-          {ready}\r\n-        </div>\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\"\r\n-            disabled={disabledButton}>\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={colorRow(account)}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710397614584,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n       <Toaster />\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div>\r\n           {ready.map((account: IDAccount) => {\r\n-            return <div>account.id</div>\r\n+            return account.id\r\n           })}\r\n         </div>\r\n         <div className=\"flex space-x-2 justify-around\">\r\n           <Button onClick={clear}>清空</Button>\r\n"
                },
                {
                    "date": 1710397730068,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,8 +17,9 @@\n import API from '@/lib/api'\r\n import { v4 as uuidv4 } from 'uuid';\r\n \r\n import { IDAccount } from '@/lib/utils'\r\n+import { read } from 'fs'\r\n export default function TAccounts({ ready } : { ready: IDAccount[] }) {\r\n   const { toast } = useToast()\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n@@ -72,23 +73,22 @@\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n   }\r\n \r\n-  const colorRow = (status) => { \r\n-    if (status == \"执行中\") {\r\n-        return \"bg-green-400\"\r\n-      }\r\n+  function isIdInList(id: string, list) {\r\n+    return list.some(account => account.id === id);\r\n   }\r\n \r\n+  const colorRow = (id) => { \r\n+\r\n+    if (isIdInList(id, ready)) {\r\n+      return \"bg-green-400\" \r\n+    }\r\n+\r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n       <TCard title=\"把账户粘贴到这里\">\r\n-        <div>\r\n-          {ready.map((account: IDAccount) => {\r\n-            return account.id\r\n-          })}\r\n-        </div>\r\n         <div className=\"flex space-x-2 justify-around\">\r\n           <Button onClick={clear}>清空</Button>\r\n           <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n             <div className=\"flex items-center space-x-2\">\r\n@@ -120,9 +120,9 @@\n           <TableBody>\r\n             {accounts &&\r\n               accounts.map((account: string[], index: number) => {\r\n                 return (\r\n-                  <TableRow key={index} className={colorRow(account)}>\r\n+                  <TableRow key={index} className={colorRow(account[0])}>\r\n                     <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n                     <TableCell>{account[2]}</TableCell>\r\n                     <TableCell>{account[3]}</TableCell>\r\n                     <TableCell>{account[4]}</TableCell>\r\n"
                },
                {
                    "date": 1710397794216,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,138 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+\r\n+import { IDAccount } from '@/lib/utils'\r\n+import { read } from 'fs'\r\n+export default function TAccounts({ ready } : { ready: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+ \r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    // toast({\r\n+    //   description: '任务创建成功',\r\n+    // })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+\r\n+  function isIdInList(id: string, list) {\r\n+    return list.some(account => account.id === id);\r\n+  }\r\n+\r\n+  const colorRow = (id) => { \r\n+\r\n+    if (isIdInList(id, ready)) {\r\n+      return \"bg-green-400\" \r\n+    }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\"\r\n+            disabled={disabledButton}>\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={colorRow(account[0]) ?? \"ddd\"}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710398147264,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,140 @@\n+import TCard from './t_card'\r\n+import { useState } from 'react'\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+\r\n+import { IDAccount } from '@/lib/utils'\r\n+import { read } from 'fs'\r\n+export default function TAccounts({ ready } : { ready: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+\r\n+  const [rowClassName, setRowClassName] = useState(\"\");\r\n+\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+ \r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    // toast({\r\n+    //   description: '任务创建成功',\r\n+    // })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+\r\n+  function isIdInList(id: string, list) {\r\n+    return list.some(account => account.id === id);\r\n+  }\r\n+\r\n+  const colorRow = (id) => { \r\n+    if (isIdInList(id, ready)) {\r\n+      return \"bg-green-400\" \r\n+    }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\"\r\n+            disabled={disabledButton}>\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={colorRow(account.id)}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710398247471,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -1,6 +1,6 @@\n import TCard from './t_card'\r\n-import { useState } from 'react'\r\n+import React, { useEffect, useState } from 'react';\r\n import {\r\n   Table,\r\n   TableBody,\r\n   TableCell,\r\n@@ -18,9 +18,9 @@\n import { v4 as uuidv4 } from 'uuid';\r\n \r\n import { IDAccount } from '@/lib/utils'\r\n import { read } from 'fs'\r\n-export default function TAccounts({ ready } : { ready: IDAccount[] }) {\r\n+export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n   const { toast } = useToast()\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n@@ -67,11 +67,25 @@\n       accounts: formatedAccounts,\r\n     }\r\n     API.post('/api/prepare', { ...data })\r\n     setDisabledButton(true)\r\n-    // toast({\r\n-    //   description: '任务创建成功',\r\n-    // })\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+    useEffect(() => {\r\n+      const colorRows = (accounts: IDAccount[]) => {\r\n+        return accounts.map(account => {\r\n+          if (list.some(item => item.id === account.id)) {\r\n+            return \"bg-green-400\";\r\n+          } else {\r\n+            return \"\";\r\n+          }\r\n+        });\r\n+      };\r\n+  \r\n+      const updatedRowClassNames = colorRows(list);\r\n+      setRowClassNames(updatedRowClassNames);\r\n+    }, [list]);\r\n   }\r\n \r\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n@@ -137,280 +151,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-\r\n-import { IDAccount } from '@/lib/utils'\r\n-import { read } from 'fs'\r\n-export default function TAccounts({ ready } : { ready: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n- \r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    // toast({\r\n-    //   description: '任务创建成功',\r\n-    // })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-\r\n-  function isIdInList(id: string, list) {\r\n-    return list.some(account => account.id === id);\r\n-  }\r\n-\r\n-  const colorRow = (id) => { \r\n-\r\n-    if (isIdInList(id, ready)) {\r\n-      return \"bg-green-400\" \r\n-    }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\"\r\n-            disabled={disabledButton}>\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={colorRow(account[0]) ?? \"ddd\"}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n-import TCard from './t_card'\r\n-import { useState } from 'react'\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-\r\n-import { IDAccount } from '@/lib/utils'\r\n-import { read } from 'fs'\r\n-export default function TAccounts({ ready } : { ready: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n- \r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    // toast({\r\n-    //   description: '任务创建成功',\r\n-    // })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-\r\n-  function isIdInList(id: string, list) {\r\n-    return list.some(account => account.id === id);\r\n-  }\r\n-\r\n-  const colorRow = (id) => { \r\n-\r\n-    if (isIdInList(id, ready)) {\r\n-      return \"bg-green-400\" \r\n-    }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\"\r\n-            disabled={disabledButton}>\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={colorRow(account[0])}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710398265339,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -20,17 +20,15 @@\n import { IDAccount } from '@/lib/utils'\r\n import { read } from 'fs'\r\n export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n   const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n   ])\r\n   const [type, setType] = useState<string>('1')\r\n   const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-\r\n-  const [rowClassName, setRowClassName] = useState(\"\");\r\n-\r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n     const result = rows.map((row) => {\r\n       let columns = row.split(',')\r\n"
                },
                {
                    "date": 1710398283175,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,143 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+\r\n+import { IDAccount } from '@/lib/utils'\r\n+import { read } from 'fs'\r\n+export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+ \r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+    useEffect(() => {\r\n+      const colorRows = (accounts: IDAccount[]) => {\r\n+        return accounts.map(account => {\r\n+          if (list.some(item => item.id === account.id)) {\r\n+            return \"bg-green-400\";\r\n+          } else {\r\n+            return \"\";\r\n+          }\r\n+        });\r\n+      };\r\n+  \r\n+      const updatedRowClassNames = colorRows(list);\r\n+      setRowClassNames(updatedRowClassNames);\r\n+    }, [list]);\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\"\r\n+            disabled={disabledButton}>\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710398324936,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -68,22 +68,8 @@\n     setDisabledButton(true)\r\n     toast({\r\n       description: '任务创建成功',\r\n     })\r\n-    useEffect(() => {\r\n-      const colorRows = (accounts: IDAccount[]) => {\r\n-        return accounts.map(account => {\r\n-          if (list.some(item => item.id === account.id)) {\r\n-            return \"bg-green-400\";\r\n-          } else {\r\n-            return \"\";\r\n-          }\r\n-        });\r\n-      };\r\n-  \r\n-      const updatedRowClassNames = colorRows(list);\r\n-      setRowClassNames(updatedRowClassNames);\r\n-    }, [list]);\r\n   }\r\n \r\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n@@ -140,156 +126,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-\r\n-import { IDAccount } from '@/lib/utils'\r\n-import { read } from 'fs'\r\n-export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n- \r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-    useEffect(() => {\r\n-      const colorRows = (accounts: IDAccount[]) => {\r\n-        return accounts.map(account => {\r\n-          if (list.some(item => item.id === account.id)) {\r\n-            return \"bg-green-400\";\r\n-          } else {\r\n-            return \"\";\r\n-          }\r\n-        });\r\n-      };\r\n-  \r\n-      const updatedRowClassNames = colorRows(list);\r\n-      setRowClassNames(updatedRowClassNames);\r\n-    }, [list]);\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-\r\n-  function isIdInList(id: string, list) {\r\n-    return list.some(account => account.id === id);\r\n-  }\r\n-\r\n-  const colorRow = (id) => { \r\n-    if (isIdInList(id, ready)) {\r\n-      return \"bg-green-400\" \r\n-    }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\"\r\n-            disabled={disabledButton}>\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={colorRow(account.id)}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710398366277,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -73,9 +73,23 @@\n \r\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n   }\r\n-\r\n+  useEffect(() => {\r\n+    const colorRows = (accounts: IDAccount[]) => {\r\n+      return accounts.map(account => {\r\n+        if (list.some(item => item.id === account.id)) {\r\n+          return \"bg-green-400\";\r\n+        } else {\r\n+          return \"\";\r\n+        }\r\n+      });\r\n+    };\r\n+    console.log(list);\r\n+    \r\n+    const updatedRowClassNames = colorRows(list);\r\n+    setRowClassNames(updatedRowClassNames);\r\n+  }, [list]);\r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n       <TCard title=\"把账户粘贴到这里\">\r\n"
                },
                {
                    "date": 1710398398614,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,143 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+\r\n+import { IDAccount } from '@/lib/utils'\r\n+import { read } from 'fs'\r\n+export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+ \r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => {\r\n+    const colorRows = (accounts: IDAccount[]) => {\r\n+      return accounts && accounts.map(account => {\r\n+        if (list.some(item => item.id === account.id)) {\r\n+          return \"bg-green-400\";\r\n+        } else {\r\n+          return \"\";\r\n+        }\r\n+      });\r\n+    };\r\n+    console.log(list);\r\n+    \r\n+    const updatedRowClassNames = colorRows(list);\r\n+    setRowClassNames(updatedRowClassNames);\r\n+  }, [list]);\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\"\r\n+            disabled={disabledButton}>\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710398421744,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -75,152 +75,12 @@\n     setType(value)\r\n   }\r\n   useEffect(() => {\r\n     const colorRows = (accounts: IDAccount[]) => {\r\n-      return accounts && accounts.map(account => {\r\n-        if (list.some(item => item.id === account.id)) {\r\n-          return \"bg-green-400\";\r\n-        } else {\r\n-          return \"\";\r\n-        }\r\n-      });\r\n-    };\r\n-    console.log(list);\r\n-    \r\n-    const updatedRowClassNames = colorRows(list);\r\n-    setRowClassNames(updatedRowClassNames);\r\n-  }, [list]);\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\"\r\n-            disabled={disabledButton}>\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-\r\n-import { IDAccount } from '@/lib/utils'\r\n-import { read } from 'fs'\r\n-export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n- \r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n+      if (!accounts) {\r\n+        return \"\"\r\n       }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => {\r\n-    const colorRows = (accounts: IDAccount[]) => {\r\n-      return accounts.map(account => {\r\n+      return  accounts.map(account => {\r\n         if (list.some(item => item.id === account.id)) {\r\n           return \"bg-green-400\";\r\n         } else {\r\n           return \"\";\r\n"
                },
                {
                    "date": 1710398457611,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -86,10 +86,12 @@\n           return \"\";\r\n         }\r\n       });\r\n     };\r\n+    console.log(\"==================\");\r\n+    \r\n     console.log(list);\r\n-    \r\n+    console.log(\"==================\");\r\n     const updatedRowClassNames = colorRows(list);\r\n     setRowClassNames(updatedRowClassNames);\r\n   }, [list]);\r\n   return (\r\n"
                },
                {
                    "date": 1710398591840,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -25,8 +25,11 @@\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n   ])\r\n+\r\n+  const [colorRows, setColorRows] = useState<string[]>([])\r\n+  setColorRows(colorRows)\r\n   const [type, setType] = useState<string>('1')\r\n   const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n"
                },
                {
                    "date": 1710398608178,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,151 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+\r\n+import { IDAccount } from '@/lib/utils'\r\n+import { read } from 'fs'\r\n+export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+\r\n+  const [colorRows, setColorRows] = useState<string[]>([])\r\n+  setColorRows(colorRows)\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+ \r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => {\r\n+    const colorRows = (accounts: IDAccount[]) => {\r\n+      if (!accounts) {\r\n+        return \"\"\r\n+      }\r\n+      return  accounts.map(account => {\r\n+        if (list.some(item => item.id === account.id)) {\r\n+          return \"bg-green-400\";\r\n+        } else {\r\n+          return \"\";\r\n+        }\r\n+      });\r\n+    };\r\n+    console.log(\"==================\");\r\n+    \r\n+    console.log(list);\r\n+    console.log(\"==================\");\r\n+    const updatedRowClassNames = colorRows(list);\r\n+    setRowClassNames(updatedRowClassNames);\r\n+  }, [colorRows]);\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\"\r\n+            disabled={disabledButton}>\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710398638749,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -27,9 +27,9 @@\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n   ])\r\n \r\n   const [colorRows, setColorRows] = useState<string[]>([])\r\n-  setColorRows(colorRows)\r\n+ \r\n   const [type, setType] = useState<string>('1')\r\n   const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n@@ -77,26 +77,26 @@\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n   }\r\n   useEffect(() => {\r\n-    const colorRows = (accounts: IDAccount[]) => {\r\n-      if (!accounts) {\r\n-        return \"\"\r\n-      }\r\n-      return  accounts.map(account => {\r\n-        if (list.some(item => item.id === account.id)) {\r\n-          return \"bg-green-400\";\r\n-        } else {\r\n-          return \"\";\r\n-        }\r\n-      });\r\n-    };\r\n-    console.log(\"==================\");\r\n+    // const colorRows = (accounts: IDAccount[]) => {\r\n+    //   if (!accounts) {\r\n+    //     return \"\"\r\n+    //   }\r\n+    //   return  accounts.map(account => {\r\n+    //     if (list.some(item => item.id === account.id)) {\r\n+    //       return \"bg-green-400\";\r\n+    //     } else {\r\n+    //       return \"\";\r\n+    //     }\r\n+    //   });\r\n+    // };\r\n+    // console.log(\"==================\");\r\n     \r\n-    console.log(list);\r\n+    // console.log(list);\r\n     console.log(\"==================\");\r\n-    const updatedRowClassNames = colorRows(list);\r\n-    setRowClassNames(updatedRowClassNames);\r\n+    // const updatedRowClassNames = colorRows(list);\r\n+    // setRowClassNames(updatedRowClassNames);\r\n   }, [colorRows]);\r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n@@ -148,155 +148,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-\r\n-import { IDAccount } from '@/lib/utils'\r\n-import { read } from 'fs'\r\n-export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-\r\n-  const [colorRows, setColorRows] = useState<string[]>([])\r\n-  setColorRows(colorRows)\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n- \r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => {\r\n-    const colorRows = (accounts: IDAccount[]) => {\r\n-      if (!accounts) {\r\n-        return \"\"\r\n-      }\r\n-      return  accounts.map(account => {\r\n-        if (list.some(item => item.id === account.id)) {\r\n-          return \"bg-green-400\";\r\n-        } else {\r\n-          return \"\";\r\n-        }\r\n-      });\r\n-    };\r\n-    console.log(\"==================\");\r\n-    \r\n-    console.log(list);\r\n-    console.log(\"==================\");\r\n-    const updatedRowClassNames = colorRows(list);\r\n-    setRowClassNames(updatedRowClassNames);\r\n-  }, [list]);\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\"\r\n-            disabled={disabledButton}>\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710398719456,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,151 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+\r\n+import { IDAccount } from '@/lib/utils'\r\n+import { read } from 'fs'\r\n+export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+\r\n+  const [colorRows, setColorRows] = useState<string[]>([])\r\n+ \r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+ \r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => {\r\n+    // const colorRows = (accounts: IDAccount[]) => {\r\n+    //   if (!accounts) {\r\n+    //     return \"\"\r\n+    //   }\r\n+    //   return  accounts.map(account => {\r\n+    //     if (list.some(item => item.id === account.id)) {\r\n+    //       return \"bg-green-400\";\r\n+    //     } else {\r\n+    //       return \"\";\r\n+    //     }\r\n+    //   });\r\n+    // };\r\n+    // console.log(\"==================\");\r\n+    \r\n+    // console.log(list);\r\n+    console.log(\"==================\");\r\n+    // const updatedRowClassNames = colorRows(list);\r\n+    // setRowClassNames(updatedRowClassNames);\r\n+  }, []);\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\"\r\n+            disabled={disabledButton}>\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710398801047,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,132 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+\r\n+import { IDAccount } from '@/lib/utils'\r\n+import { read } from 'fs'\r\n+export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+\r\n+  const [colorRows, setColorRows] = useState<string[]>([])\r\n+ \r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+ \r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+ \r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\"\r\n+            disabled={disabledButton}>\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710398834066,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,159 +80,12 @@\n  \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\"\r\n-            disabled={disabledButton}>\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n+      <div>\r\n+        {list.map((item: IDAccount) => { return \"111\"})}\r\n+      </div>\r\n \r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-\r\n-import { IDAccount } from '@/lib/utils'\r\n-import { read } from 'fs'\r\n-export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-\r\n-  const [colorRows, setColorRows] = useState<string[]>([])\r\n- \r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n- \r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => {\r\n-    // const colorRows = (accounts: IDAccount[]) => {\r\n-    //   if (!accounts) {\r\n-    //     return \"\"\r\n-    //   }\r\n-    //   return  accounts.map(account => {\r\n-    //     if (list.some(item => item.id === account.id)) {\r\n-    //       return \"bg-green-400\";\r\n-    //     } else {\r\n-    //       return \"\";\r\n-    //     }\r\n-    //   });\r\n-    // };\r\n-    // console.log(\"==================\");\r\n-    \r\n-    // console.log(list);\r\n-    console.log(\"==================\");\r\n-    // const updatedRowClassNames = colorRows(list);\r\n-    // setRowClassNames(updatedRowClassNames);\r\n-  }, []);\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className=\"flex space-x-2 justify-around\">\r\n           <Button onClick={clear}>清空</Button>\r\n           <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n@@ -280,155 +133,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-\r\n-import { IDAccount } from '@/lib/utils'\r\n-import { read } from 'fs'\r\n-export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-\r\n-  const [colorRows, setColorRows] = useState<string[]>([])\r\n- \r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n- \r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => {\r\n-    // const colorRows = (accounts: IDAccount[]) => {\r\n-    //   if (!accounts) {\r\n-    //     return \"\"\r\n-    //   }\r\n-    //   return  accounts.map(account => {\r\n-    //     if (list.some(item => item.id === account.id)) {\r\n-    //       return \"bg-green-400\";\r\n-    //     } else {\r\n-    //       return \"\";\r\n-    //     }\r\n-    //   });\r\n-    // };\r\n-    // console.log(\"==================\");\r\n-    \r\n-    // console.log(list);\r\n-    console.log(\"==================\");\r\n-    // const updatedRowClassNames = colorRows(list);\r\n-    // setRowClassNames(updatedRowClassNames);\r\n-  }, [colorRows]);\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\"\r\n-            disabled={disabledButton}>\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710398902473,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -18,8 +18,9 @@\n import { v4 as uuidv4 } from 'uuid';\r\n \r\n import { IDAccount } from '@/lib/utils'\r\n import { read } from 'fs'\r\n+import { divide } from 'lodash';\r\n export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n   const { toast } = useToast()\r\n   const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n@@ -81,9 +82,9 @@\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n       <div>\r\n-        {list.map((item: IDAccount) => { return \"111\"})}\r\n+        {list && list.map((item: IDAccount) => { return (<div key={item.id}>{item.status}</div>)})}\r\n       </div>\r\n \r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className=\"flex space-x-2 justify-around\">\r\n"
                },
                {
                    "date": 1710398923466,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -82,9 +82,12 @@\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n       <div>\r\n-        {list && list.map((item: IDAccount) => { return (<div key={item.id}>{item.status}</div>)})}\r\n+        {list && list.map((item: IDAccount) => {\r\n+          return (\r\n+            <div key={item.id}>{item.status}</div>)\r\n+        })}\r\n       </div>\r\n \r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className=\"flex space-x-2 justify-around\">\r\n"
                },
                {
                    "date": 1710398943554,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -84,9 +84,9 @@\n       <Toaster />\r\n       <div>\r\n         {list && list.map((item: IDAccount) => {\r\n           return (\r\n-            <div key={item.id}>{item.status}</div>)\r\n+            <div key={item.id}>{item.id}  {item.status}</div>)\r\n         })}\r\n       </div>\r\n \r\n       <TCard title=\"把账户粘贴到这里\">\r\n"
                },
                {
                    "date": 1710398972204,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,9 +77,13 @@\n \r\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n   }\r\n- \r\n+  useEffect(() => { \r\n+    console.log(\"====\");\r\n+    \r\n+\r\n+  }, [list])\r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n       <div>\r\n"
                },
                {
                    "date": 1710398996746,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -78,11 +78,20 @@\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n   }\r\n   useEffect(() => { \r\n-    console.log(\"====\");\r\n-    \r\n+    const colorRows = (accounts: IDAccount[]) => {\r\n+      return accounts.map(account => {\r\n+        if (list.some(item => item.id === account.id)) {\r\n+          return \"bg-green-400\";\r\n+        } else {\r\n+          return \"\";\r\n+        }\r\n+      });\r\n+    };\r\n \r\n+    const updatedRowClassNames = colorRows(list);\r\n+    setRowClassNames(updatedRowClassNames);\r\n   }, [list])\r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n"
                },
                {
                    "date": 1710399380982,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -80,9 +80,9 @@\n   }\r\n   useEffect(() => { \r\n     const colorRows = (accounts: IDAccount[]) => {\r\n       return accounts.map(account => {\r\n-        if (list.some(item => item.id === account.id)) {\r\n+        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n           return \"bg-green-400\";\r\n         } else {\r\n           return \"\";\r\n         }\r\n@@ -94,15 +94,8 @@\n   }, [list])\r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n-      <div>\r\n-        {list && list.map((item: IDAccount) => {\r\n-          return (\r\n-            <div key={item.id}>{item.id}  {item.status}</div>)\r\n-        })}\r\n-      </div>\r\n-\r\n       <TCard title=\"把账户粘贴到这里\">\r\n         <div className=\"flex space-x-2 justify-around\">\r\n           <Button onClick={clear}>清空</Button>\r\n           <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n"
                },
                {
                    "date": 1710399405601,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,145 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+\r\n+import { IDAccount } from '@/lib/utils'\r\n+import { read } from 'fs'\r\n+import { divide } from 'lodash';\r\n+export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+\r\n+  const [colorRows, setColorRows] = useState<string[]>([])\r\n+ \r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+ \r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => { \r\n+    const colorRows = (accounts: IDAccount[]) => {\r\n+      return accounts.map(account => {\r\n+        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n+          return \"bg-green-400\";\r\n+        } else {\r\n+          return \"\";\r\n+        }\r\n+      });\r\n+    };\r\n+\r\n+    const updatedRowClassNames = colorRows(list);\r\n+    setRowClassNames(updatedRowClassNames);\r\n+  }, [list])\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710400077649,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -83,9 +83,9 @@\n       return accounts.map(account => {\r\n         if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n           return \"bg-green-400\";\r\n         } else {\r\n-          return \"\";\r\n+          return \"bg-yellow-400\";\r\n         }\r\n       });\r\n     };\r\n \r\n@@ -142,150 +142,4 @@\n       </TCard>\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-\r\n-import { IDAccount } from '@/lib/utils'\r\n-import { read } from 'fs'\r\n-import { divide } from 'lodash';\r\n-export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-\r\n-  const [colorRows, setColorRows] = useState<string[]>([])\r\n- \r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n- \r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => { \r\n-    const colorRows = (accounts: IDAccount[]) => {\r\n-      return accounts.map(account => {\r\n-        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n-          return \"bg-green-400\";\r\n-        } else {\r\n-          return \"\";\r\n-        }\r\n-      });\r\n-    };\r\n-\r\n-    const updatedRowClassNames = colorRows(list);\r\n-    setRowClassNames(updatedRowClassNames);\r\n-  }, [list])\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\"\r\n-            disabled={disabledButton}>\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710400358351,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -17,20 +17,16 @@\n import API from '@/lib/api'\r\n import { v4 as uuidv4 } from 'uuid';\r\n \r\n import { IDAccount } from '@/lib/utils'\r\n-import { read } from 'fs'\r\n-import { divide } from 'lodash';\r\n export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n   const { toast } = useToast()\r\n   const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n   ])\r\n \r\n-  const [colorRows, setColorRows] = useState<string[]>([])\r\n- \r\n   const [type, setType] = useState<string>('1')\r\n   const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n"
                },
                {
                    "date": 1710400365593,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -47,10 +47,8 @@\n   const clear = () => {\r\n     setAccounts([])\r\n   }\r\n \r\n- \r\n-\r\n   const submit = () => {\r\n     const formatedAccounts = accounts.map((account) => {\r\n       return {\r\n         id: account[0],\r\n"
                },
                {
                    "date": 1710400373600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -24,9 +24,8 @@\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n   ])\r\n-\r\n   const [type, setType] = useState<string>('1')\r\n   const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n@@ -85,8 +84,9 @@\n \r\n     const updatedRowClassNames = colorRows(list);\r\n     setRowClassNames(updatedRowClassNames);\r\n   }, [list])\r\n+\r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n       <TCard title=\"把账户粘贴到这里\">\r\n"
                },
                {
                    "date": 1710400378870,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n import axios from 'axios'\r\n import { useToast } from '@/components/ui/use-toast'\r\n import API from '@/lib/api'\r\n import { v4 as uuidv4 } from 'uuid';\r\n+import { IDAccount } from '@/lib/utils'\r\n \r\n-import { IDAccount } from '@/lib/utils'\r\n export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n   const { toast } = useToast()\r\n   const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n"
                },
                {
                    "date": 1710400387721,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -7,8 +7,14 @@\n   TableHead,\r\n   TableHeader,\r\n   TableRow,\r\n } from '@/components/ui/table'\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\"\r\n import { Toaster } from '@/components/ui/toaster'\r\n import { Label } from '@/components/ui/label'\r\n import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n import { Button } from '@/components/ui/button'\r\n"
                },
                {
                    "date": 1710400402983,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n+      {/* <TCard title=\"把账户粘贴到这里\">\r\n         <div className=\"flex space-x-2 justify-around\">\r\n           <Button onClick={clear}>清空</Button>\r\n           <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n             <div className=\"flex items-center space-x-2\">\r\n@@ -138,8 +138,8 @@\n               })}\r\n           </TableBody>\r\n         </Table>\r\n         <br />\r\n-      </TCard>\r\n+      </TCard> */}\r\n     </div>\r\n   )\r\n }\r\n"
                },
                {
                    "date": 1710400422075,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,8 +94,20 @@\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n+      <Tabs defaultValue=\"account\" className=\"w-[400px]\">\r\n+      <TabsList className=\"grid w-full grid-cols-2\">\r\n+        <TabsTrigger value=\"account\">Account</TabsTrigger>\r\n+        <TabsTrigger value=\"password\">Password</TabsTrigger>\r\n+      </TabsList>\r\n+      <TabsContent value=\"account\">\r\n+        dd\r\n+      </TabsContent>\r\n+      <TabsContent value=\"password\">\r\n+        ss\r\n+      </TabsContent>\r\n+    </Tabs>\r\n       {/* <TCard title=\"把账户粘贴到这里\">\r\n         <div className=\"flex space-x-2 justify-around\">\r\n           <Button onClick={clear}>清空</Button>\r\n           <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n"
                },
                {
                    "date": 1710400429815,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -94,9 +94,9 @@\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n-      <Tabs defaultValue=\"account\" className=\"w-[400px]\">\r\n+      <Tabs defaultValue=\"account\" className=\"w-[800px]\">\r\n       <TabsList className=\"grid w-full grid-cols-2\">\r\n         <TabsTrigger value=\"account\">Account</TabsTrigger>\r\n         <TabsTrigger value=\"password\">Password</TabsTrigger>\r\n       </TabsList>\r\n"
                },
                {
                    "date": 1710400439459,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,157 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\"\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+import { IDAccount } from '@/lib/utils'\r\n+\r\n+export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => { \r\n+    const colorRows = (accounts: IDAccount[]) => {\r\n+      return accounts.map(account => {\r\n+        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n+          return \"bg-green-400\";\r\n+        } else {\r\n+          return \"bg-yellow-400\";\r\n+        }\r\n+      });\r\n+    };\r\n+\r\n+    const updatedRowClassNames = colorRows(list);\r\n+    setRowClassNames(updatedRowClassNames);\r\n+  }, [list])\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n+      <TabsList className=\"grid w-full grid-cols-2\">\r\n+        <TabsTrigger value=\"account\">Account</TabsTrigger>\r\n+        <TabsTrigger value=\"password\">Password</TabsTrigger>\r\n+      </TabsList>\r\n+      <TabsContent value=\"account\">\r\n+        dd\r\n+      </TabsContent>\r\n+      <TabsContent value=\"password\">\r\n+        ss\r\n+      </TabsContent>\r\n+    </Tabs>\r\n+      {/* <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard> */}\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710400448590,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -96,9 +96,9 @@\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n       <Tabs defaultValue=\"account\" className=\"w-full\">\r\n       <TabsList className=\"grid w-full grid-cols-2\">\r\n-        <TabsTrigger value=\"account\">Account</TabsTrigger>\r\n+        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n         <TabsTrigger value=\"password\">Password</TabsTrigger>\r\n       </TabsList>\r\n       <TabsContent value=\"account\">\r\n         dd\r\n@@ -154,161 +154,4 @@\n       </TCard> */}\r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger,\r\n-} from \"@/components/ui/tabs\"\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-import { IDAccount } from '@/lib/utils'\r\n-\r\n-export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => { \r\n-    const colorRows = (accounts: IDAccount[]) => {\r\n-      return accounts.map(account => {\r\n-        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n-          return \"bg-green-400\";\r\n-        } else {\r\n-          return \"bg-yellow-400\";\r\n-        }\r\n-      });\r\n-    };\r\n-\r\n-    const updatedRowClassNames = colorRows(list);\r\n-    setRowClassNames(updatedRowClassNames);\r\n-  }, [list])\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <Tabs defaultValue=\"account\" className=\"w-[800px]\">\r\n-      <TabsList className=\"grid w-full grid-cols-2\">\r\n-        <TabsTrigger value=\"account\">Account</TabsTrigger>\r\n-        <TabsTrigger value=\"password\">Password</TabsTrigger>\r\n-      </TabsList>\r\n-      <TabsContent value=\"account\">\r\n-        dd\r\n-      </TabsContent>\r\n-      <TabsContent value=\"password\">\r\n-        ss\r\n-      </TabsContent>\r\n-    </Tabs>\r\n-      {/* <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard> */}\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710400455121,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,157 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\"\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+import { IDAccount } from '@/lib/utils'\r\n+\r\n+export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => { \r\n+    const colorRows = (accounts: IDAccount[]) => {\r\n+      return accounts.map(account => {\r\n+        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n+          return \"bg-green-400\";\r\n+        } else {\r\n+          return \"bg-yellow-400\";\r\n+        }\r\n+      });\r\n+    };\r\n+\r\n+    const updatedRowClassNames = colorRows(list);\r\n+    setRowClassNames(updatedRowClassNames);\r\n+  }, [list])\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n+      <TabsList className=\"grid w-full grid-cols-2\">\r\n+        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n+        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n+      </TabsList>\r\n+      <TabsContent value=\"account\">\r\n+        dd\r\n+      </TabsContent>\r\n+      <TabsContent value=\"password\">\r\n+        ss\r\n+      </TabsContent>\r\n+    </Tabs>\r\n+      {/* <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard> */}\r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710400474540,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,157 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\"\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+import { IDAccount } from '@/lib/utils'\r\n+\r\n+export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => { \r\n+    const colorRows = (accounts: IDAccount[]) => {\r\n+      return accounts.map(account => {\r\n+        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n+          return \"bg-green-400\";\r\n+        } else {\r\n+          return \"bg-yellow-400\";\r\n+        }\r\n+      });\r\n+    };\r\n+\r\n+    const updatedRowClassNames = colorRows(list);\r\n+    setRowClassNames(updatedRowClassNames);\r\n+  }, [list])\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n+      <TabsList className=\"grid w-full grid-cols-2\">\r\n+        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n+        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n+      </TabsList>\r\n+      <TabsContent value=\"account\">\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+      </TabsContent>\r\n+      <TabsContent value=\"password\">\r\n+        ss\r\n+      </TabsContent>\r\n+    </Tabs>\r\n+      \r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710400483020,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,8 @@\n             variant=\"destructive\">\r\n             准备\r\n           </Button>\r\n         </div>\r\n-\r\n         <Table>\r\n           <TableHeader>\r\n             <TableRow>\r\n               <TableHead>用户名</TableHead>\r\n"
                },
                {
                    "date": 1710401688712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,178 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\"\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+import { IDAccount } from '@/lib/utils'\r\n+\r\n+export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => { \r\n+    const colorRows = (accounts: IDAccount[]) => {\r\n+      return accounts.map(account => {\r\n+        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n+          return \"bg-green-400\";\r\n+        } else {\r\n+          return \"bg-yellow-400\";\r\n+        }\r\n+      });\r\n+    };\r\n+\r\n+    const updatedRowClassNames = colorRows(list);\r\n+    setRowClassNames(updatedRowClassNames);\r\n+  }, [list])\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n+      <TabsList className=\"grid w-full grid-cols-2\">\r\n+        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n+        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n+      </TabsList>\r\n+      <TabsContent value=\"account\">\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+      </TabsContent>\r\n+      <TabsContent value=\"password\">\r\n+      <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {list &&\r\n+              list.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+      </TabsContent>\r\n+    </Tabs>\r\n+      \r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710401695812,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,178 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\"\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+import { IDAccount } from '@/lib/utils'\r\n+\r\n+export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => { \r\n+    const colorRows = (accounts: IDAccount[]) => {\r\n+      return accounts.map(account => {\r\n+        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n+          return \"bg-green-400\";\r\n+        } else {\r\n+          return \"bg-yellow-400\";\r\n+        }\r\n+      });\r\n+    };\r\n+\r\n+    const updatedRowClassNames = colorRows(list);\r\n+    setRowClassNames(updatedRowClassNames);\r\n+  }, [list])\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n+      <TabsList className=\"grid w-full grid-cols-2\">\r\n+        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n+        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n+      </TabsList>\r\n+      <TabsContent value=\"account\">\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+      </TabsContent>\r\n+      <TabsContent value=\"password\">\r\n+      <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {list &&\r\n+              list.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+      </TabsContent>\r\n+    </Tabs>\r\n+      \r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710401772613,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n import API from '@/lib/api'\r\n import { v4 as uuidv4 } from 'uuid';\r\n import { IDAccount } from '@/lib/utils'\r\n \r\n-export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n+export default function TAccounts({ tasks }) {\r\n   const { toast } = useToast()\r\n   const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n@@ -175,652 +175,4 @@\n       \r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger,\r\n-} from \"@/components/ui/tabs\"\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-import { IDAccount } from '@/lib/utils'\r\n-\r\n-export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => { \r\n-    const colorRows = (accounts: IDAccount[]) => {\r\n-      return accounts.map(account => {\r\n-        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n-          return \"bg-green-400\";\r\n-        } else {\r\n-          return \"bg-yellow-400\";\r\n-        }\r\n-      });\r\n-    };\r\n-\r\n-    const updatedRowClassNames = colorRows(list);\r\n-    setRowClassNames(updatedRowClassNames);\r\n-  }, [list])\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n-      <TabsList className=\"grid w-full grid-cols-2\">\r\n-        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n-        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n-      </TabsList>\r\n-      <TabsContent value=\"account\">\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-      </TabsContent>\r\n-      <TabsContent value=\"password\">\r\n-      <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {list &&\r\n-              list.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-      </TabsContent>\r\n-    </Tabs>\r\n-      \r\n-    </div>\r\n-  )\r\n-}\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger,\r\n-} from \"@/components/ui/tabs\"\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-import { IDAccount } from '@/lib/utils'\r\n-\r\n-export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => { \r\n-    const colorRows = (accounts: IDAccount[]) => {\r\n-      return accounts.map(account => {\r\n-        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n-          return \"bg-green-400\";\r\n-        } else {\r\n-          return \"bg-yellow-400\";\r\n-        }\r\n-      });\r\n-    };\r\n-\r\n-    const updatedRowClassNames = colorRows(list);\r\n-    setRowClassNames(updatedRowClassNames);\r\n-  }, [list])\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n-      <TabsList className=\"grid w-full grid-cols-2\">\r\n-        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n-        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n-      </TabsList>\r\n-      <TabsContent value=\"account\">\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-      </TabsContent>\r\n-      <TabsContent value=\"password\">\r\n-        ss\r\n-      </TabsContent>\r\n-    </Tabs>\r\n-      \r\n-    </div>\r\n-  )\r\n-}\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger,\r\n-} from \"@/components/ui/tabs\"\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-import { IDAccount } from '@/lib/utils'\r\n-\r\n-export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => { \r\n-    const colorRows = (accounts: IDAccount[]) => {\r\n-      return accounts.map(account => {\r\n-        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n-          return \"bg-green-400\";\r\n-        } else {\r\n-          return \"bg-yellow-400\";\r\n-        }\r\n-      });\r\n-    };\r\n-\r\n-    const updatedRowClassNames = colorRows(list);\r\n-    setRowClassNames(updatedRowClassNames);\r\n-  }, [list])\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n-      <TabsList className=\"grid w-full grid-cols-2\">\r\n-        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n-        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n-      </TabsList>\r\n-      <TabsContent value=\"account\">\r\n-        dd\r\n-      </TabsContent>\r\n-      <TabsContent value=\"password\">\r\n-        ss\r\n-      </TabsContent>\r\n-    </Tabs>\r\n-      {/* <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard> */}\r\n-    </div>\r\n-  )\r\n-}\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger,\r\n-} from \"@/components/ui/tabs\"\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-import { IDAccount } from '@/lib/utils'\r\n-\r\n-export default function TAccounts({ list } : { list: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => { \r\n-    const colorRows = (accounts: IDAccount[]) => {\r\n-      return accounts.map(account => {\r\n-        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n-          return \"bg-green-400\";\r\n-        } else {\r\n-          return \"bg-yellow-400\";\r\n-        }\r\n-      });\r\n-    };\r\n-\r\n-    const updatedRowClassNames = colorRows(list);\r\n-    setRowClassNames(updatedRowClassNames);\r\n-  }, [list])\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n-      <TabsList className=\"grid w-full grid-cols-2\">\r\n-        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n-        <TabsTrigger value=\"password\">Password</TabsTrigger>\r\n-      </TabsList>\r\n-      <TabsContent value=\"account\">\r\n-        dd\r\n-      </TabsContent>\r\n-      <TabsContent value=\"password\">\r\n-        ss\r\n-      </TabsContent>\r\n-    </Tabs>\r\n-      {/* <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard> */}\r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710401840094,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -23,9 +23,9 @@\n import API from '@/lib/api'\r\n import { v4 as uuidv4 } from 'uuid';\r\n import { IDAccount } from '@/lib/utils'\r\n \r\n-export default function TAccounts({ tasks }) {\r\n+export default function TAccounts({ tasks }: { tasks: IDAccount[] }) {\r\n   const { toast } = useToast()\r\n   const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n"
                },
                {
                    "date": 1710401892476,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -156,16 +156,12 @@\n               <TableHead>时间</TableHead>\r\n             </TableRow>\r\n           </TableHeader>\r\n           <TableBody>\r\n-            {list &&\r\n-              list.map((account: string[], index: number) => {\r\n+            {tasks &&\r\n+              tasks.map((account: IDAccount[], index: number) => {\r\n                 return (\r\n                   <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n                   </TableRow>\r\n                 )\r\n               })}\r\n           </TableBody>\r\n"
                },
                {
                    "date": 1710401906733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -89,9 +89,9 @@\n     };\r\n \r\n     const updatedRowClassNames = colorRows(list);\r\n     setRowClassNames(updatedRowClassNames);\r\n-  }, [list])\r\n+  }, [tasks])\r\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n"
                },
                {
                    "date": 1710401921633,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,174 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\"\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+import { IDAccount } from '@/lib/utils'\r\n+\r\n+export default function TAccounts({ tasks }: { tasks: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => { \r\n+    const colorRows = (accounts: IDAccount[]) => {\r\n+      return accounts.map(account => {\r\n+        if (tasks.some(item => item.id === account.id && item.status === \"1\")) {\r\n+          return \"bg-green-400\";\r\n+        } else {\r\n+          return \"bg-yellow-400\";\r\n+        }\r\n+      });\r\n+    };\r\n+\r\n+    const updatedRowClassNames = colorRows(list);\r\n+    setRowClassNames(updatedRowClassNames);\r\n+  }, [tasks])\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n+      <TabsList className=\"grid w-full grid-cols-2\">\r\n+        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n+        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n+      </TabsList>\r\n+      <TabsContent value=\"account\">\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+      </TabsContent>\r\n+      <TabsContent value=\"password\">\r\n+      <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {tasks &&\r\n+              tasks.map((account: IDAccount[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+      </TabsContent>\r\n+    </Tabs>\r\n+      \r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710401947747,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -87,9 +87,9 @@\n         }\r\n       });\r\n     };\r\n \r\n-    const updatedRowClassNames = colorRows(list);\r\n+    const updatedRowClassNames = colorRows(tasks);\r\n     setRowClassNames(updatedRowClassNames);\r\n   }, [tasks])\r\n \r\n   return (\r\n@@ -157,9 +157,9 @@\n             </TableRow>\r\n           </TableHeader>\r\n           <TableBody>\r\n             {tasks &&\r\n-              tasks.map((account: IDAccount[], index: number) => {\r\n+              tasks.map((account: IDAccount, index: number) => {\r\n                 return (\r\n                   <TableRow key={index} className={rowClassNames[index]}>\r\n                   </TableRow>\r\n                 )\r\n@@ -171,178 +171,4 @@\n       \r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger,\r\n-} from \"@/components/ui/tabs\"\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-import { IDAccount } from '@/lib/utils'\r\n-\r\n-export default function TAccounts({ tasks }: { tasks: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => { \r\n-    const colorRows = (accounts: IDAccount[]) => {\r\n-      return accounts.map(account => {\r\n-        if (list.some(item => item.id === account.id && item.status === \"1\")) {\r\n-          return \"bg-green-400\";\r\n-        } else {\r\n-          return \"bg-yellow-400\";\r\n-        }\r\n-      });\r\n-    };\r\n-\r\n-    const updatedRowClassNames = colorRows(list);\r\n-    setRowClassNames(updatedRowClassNames);\r\n-  }, [tasks])\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n-      <TabsList className=\"grid w-full grid-cols-2\">\r\n-        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n-        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n-      </TabsList>\r\n-      <TabsContent value=\"account\">\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-      </TabsContent>\r\n-      <TabsContent value=\"password\">\r\n-      <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {tasks &&\r\n-              tasks.map((account: IDAccount[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-      </TabsContent>\r\n-    </Tabs>\r\n-      \r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710401976413,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,8 +160,9 @@\n             {tasks &&\r\n               tasks.map((account: IDAccount, index: number) => {\r\n                 return (\r\n                   <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell>{account.date}</TableCell>\r\n                   </TableRow>\r\n                 )\r\n               })}\r\n           </TableBody>\r\n"
                },
                {
                    "date": 1710401990999,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -161,8 +161,11 @@\n               tasks.map((account: IDAccount, index: number) => {\r\n                 return (\r\n                   <TableRow key={index} className={rowClassNames[index]}>\r\n                     <TableCell>{account.date}</TableCell>\r\n+                    <TableCell>{account.username}</TableCell>\r\n+                    <TableCell>{account.password}</TableCell>\r\n+                    <TableCell>{account.date}</TableCell>\r\n                   </TableRow>\r\n                 )\r\n               })}\r\n           </TableBody>\r\n"
                },
                {
                    "date": 1710402007211,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,11 +160,12 @@\n             {tasks &&\r\n               tasks.map((account: IDAccount, index: number) => {\r\n                 return (\r\n                   <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell>{account.date}</TableCell>\r\n+                   \r\n                     <TableCell>{account.username}</TableCell>\r\n                     <TableCell>{account.password}</TableCell>\r\n+                    <TableCell>{account.idcard}</TableCell>\r\n                     <TableCell>{account.date}</TableCell>\r\n                   </TableRow>\r\n                 )\r\n               })}\r\n"
                },
                {
                    "date": 1710402025805,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,13 +160,13 @@\n             {tasks &&\r\n               tasks.map((account: IDAccount, index: number) => {\r\n                 return (\r\n                   <TableRow key={index} className={rowClassNames[index]}>\r\n-                   \r\n                     <TableCell>{account.username}</TableCell>\r\n                     <TableCell>{account.password}</TableCell>\r\n                     <TableCell>{account.idcard}</TableCell>\r\n                     <TableCell>{account.date}</TableCell>\r\n+                    <TableCell>{account.category}</TableCell>\r\n                   </TableRow>\r\n                 )\r\n               })}\r\n           </TableBody>\r\n"
                },
                {
                    "date": 1710402035327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,180 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\"\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+import { IDAccount } from '@/lib/utils'\r\n+\r\n+export default function TAccounts({ tasks }: { tasks: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => { \r\n+    const colorRows = (accounts: IDAccount[]) => {\r\n+      return accounts.map(account => {\r\n+        if (tasks.some(item => item.id === account.id && item.status === \"1\")) {\r\n+          return \"bg-green-400\";\r\n+        } else {\r\n+          return \"bg-yellow-400\";\r\n+        }\r\n+      });\r\n+    };\r\n+\r\n+    const updatedRowClassNames = colorRows(tasks);\r\n+    setRowClassNames(updatedRowClassNames);\r\n+  }, [tasks])\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n+      <TabsList className=\"grid w-full grid-cols-2\">\r\n+        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n+        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n+      </TabsList>\r\n+      <TabsContent value=\"account\">\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+      </TabsContent>\r\n+      <TabsContent value=\"password\">\r\n+      <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+              <TableHead>票务</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {tasks &&\r\n+              tasks.map((account: IDAccount, index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell>{account.username}</TableCell>\r\n+                    <TableCell>{account.password}</TableCell>\r\n+                    <TableCell>{account.idcard}</TableCell>\r\n+                    <TableCell>{account.date}</TableCell>\r\n+                    <TableCell>{account.category}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+      </TabsContent>\r\n+    </Tabs>\r\n+      \r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710402051546,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -77,20 +77,20 @@\n   const handleSelect = (value: string) => {\r\n     setType(value)\r\n   }\r\n   useEffect(() => { \r\n-    const colorRows = (accounts: IDAccount[]) => {\r\n-      return accounts.map(account => {\r\n-        if (tasks.some(item => item.id === account.id && item.status === \"1\")) {\r\n-          return \"bg-green-400\";\r\n-        } else {\r\n-          return \"bg-yellow-400\";\r\n-        }\r\n-      });\r\n-    };\r\n+    // const colorRows = (accounts: IDAccount[]) => {\r\n+    //   return accounts.map(account => {\r\n+    //     if (tasks.some(item => item.id === account.id && item.status === \"1\")) {\r\n+    //       return \"bg-green-400\";\r\n+    //     } else {\r\n+    //       return \"bg-yellow-400\";\r\n+    //     }\r\n+    //   });\r\n+    // };\r\n \r\n-    const updatedRowClassNames = colorRows(tasks);\r\n-    setRowClassNames(updatedRowClassNames);\r\n+    // const updatedRowClassNames = colorRows(tasks);\r\n+    // setRowClassNames(updatedRowClassNames);\r\n   }, [tasks])\r\n \r\n   return (\r\n     <div onPaste={handlePaste}>\r\n@@ -177,183 +177,4 @@\n       \r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger,\r\n-} from \"@/components/ui/tabs\"\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-import { IDAccount } from '@/lib/utils'\r\n-\r\n-export default function TAccounts({ tasks }: { tasks: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => { \r\n-    const colorRows = (accounts: IDAccount[]) => {\r\n-      return accounts.map(account => {\r\n-        if (tasks.some(item => item.id === account.id && item.status === \"1\")) {\r\n-          return \"bg-green-400\";\r\n-        } else {\r\n-          return \"bg-yellow-400\";\r\n-        }\r\n-      });\r\n-    };\r\n-\r\n-    const updatedRowClassNames = colorRows(tasks);\r\n-    setRowClassNames(updatedRowClassNames);\r\n-  }, [tasks])\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n-      <TabsList className=\"grid w-full grid-cols-2\">\r\n-        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n-        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n-      </TabsList>\r\n-      <TabsContent value=\"account\">\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-      </TabsContent>\r\n-      <TabsContent value=\"password\">\r\n-      <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {tasks &&\r\n-              tasks.map((account: IDAccount, index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell>{account.username}</TableCell>\r\n-                    <TableCell>{account.password}</TableCell>\r\n-                    <TableCell>{account.idcard}</TableCell>\r\n-                    <TableCell>{account.date}</TableCell>\r\n-                    <TableCell>{account.category}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-      </TabsContent>\r\n-    </Tabs>\r\n-      \r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710402069897,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -165,9 +165,9 @@\n                     <TableCell>{account.username}</TableCell>\r\n                     <TableCell>{account.password}</TableCell>\r\n                     <TableCell>{account.idcard}</TableCell>\r\n                     <TableCell>{account.date}</TableCell>\r\n-                    <TableCell>{account.category}</TableCell>\r\n+                    <TableCell>{account.status}</TableCell>\r\n                   </TableRow>\r\n                 )\r\n               })}\r\n           </TableBody>\r\n"
                },
                {
                    "date": 1710402299135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -153,16 +153,16 @@\n               <TableHead>用户名</TableHead>\r\n               <TableHead>密码</TableHead>\r\n               <TableHead>身份证</TableHead>\r\n               <TableHead>时间</TableHead>\r\n-              <TableHead>票务</TableHead>\r\n+              <TableHead>状态</TableHead>\r\n             </TableRow>\r\n           </TableHeader>\r\n           <TableBody>\r\n             {tasks &&\r\n               tasks.map((account: IDAccount, index: number) => {\r\n                 return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                  <TableRow key={index} className={}>\r\n                     <TableCell>{account.username}</TableCell>\r\n                     <TableCell>{account.password}</TableCell>\r\n                     <TableCell>{account.idcard}</TableCell>\r\n                     <TableCell>{account.date}</TableCell>\r\n"
                },
                {
                    "date": 1710402347123,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -160,9 +160,9 @@\n           <TableBody>\r\n             {tasks &&\r\n               tasks.map((account: IDAccount, index: number) => {\r\n                 return (\r\n-                  <TableRow key={index} className={}>\r\n+                  <TableRow key={index} className={getStatusClassName(account.status)}>\r\n                     <TableCell>{account.username}</TableCell>\r\n                     <TableCell>{account.password}</TableCell>\r\n                     <TableCell>{account.idcard}</TableCell>\r\n                     <TableCell>{account.date}</TableCell>\r\n"
                },
                {
                    "date": 1710402370658,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -91,8 +91,18 @@\n     // const updatedRowClassNames = colorRows(tasks);\r\n     // setRowClassNames(updatedRowClassNames);\r\n   }, [tasks])\r\n \r\n+  function getStatusClassName(status) {\r\n+    if (status === \"1\") {\r\n+      return 'bg-yellow-500'; // 使用 yellow 样式类名\r\n+    } else if (status === \"2\") {\r\n+      return 'bg-green-500'; // 使用 green 样式类名\r\n+    } else {\r\n+      return ''; // 没有其他样式类名\r\n+    }\r\n+  }\r\n+\r\n   return (\r\n     <div onPaste={handlePaste}>\r\n       <Toaster />\r\n       <Tabs defaultValue=\"account\" className=\"w-full\">\r\n"
                },
                {
                    "date": 1710402380371,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,190 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\"\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+import { IDAccount } from '@/lib/utils'\r\n+\r\n+export default function TAccounts({ tasks }: { tasks: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => { \r\n+    // const colorRows = (accounts: IDAccount[]) => {\r\n+    //   return accounts.map(account => {\r\n+    //     if (tasks.some(item => item.id === account.id && item.status === \"1\")) {\r\n+    //       return \"bg-green-400\";\r\n+    //     } else {\r\n+    //       return \"bg-yellow-400\";\r\n+    //     }\r\n+    //   });\r\n+    // };\r\n+\r\n+    // const updatedRowClassNames = colorRows(tasks);\r\n+    // setRowClassNames(updatedRowClassNames);\r\n+  }, [tasks])\r\n+\r\n+  function getStatusClassName(status: string) {\r\n+    if (status === \"1\") {\r\n+      return 'bg-yellow-500'; // 使用 yellow 样式类名\r\n+    } else if (status === \"2\") {\r\n+      return 'bg-green-500'; // 使用 green 样式类名\r\n+    } else {\r\n+      return ''; // 没有其他样式类名\r\n+    }\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n+      <TabsList className=\"grid w-full grid-cols-2\">\r\n+        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n+        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n+      </TabsList>\r\n+      <TabsContent value=\"account\">\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+      </TabsContent>\r\n+      <TabsContent value=\"password\">\r\n+      <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+              <TableHead>状态</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {tasks &&\r\n+              tasks.map((account: IDAccount, index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={getStatusClassName(account.status)}>\r\n+                    <TableCell>{account.username}</TableCell>\r\n+                    <TableCell>{account.password}</TableCell>\r\n+                    <TableCell>{account.idcard}</TableCell>\r\n+                    <TableCell>{account.date}</TableCell>\r\n+                    <TableCell>{account.status}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+      </TabsContent>\r\n+    </Tabs>\r\n+      \r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710402417399,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,189 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\"\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+import { IDAccount } from '@/lib/utils'\r\n+\r\n+export default function TAccounts({ tasks }: { tasks: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('1')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+  useEffect(() => { \r\n+    // const colorRows = (accounts: IDAccount[]) => {\r\n+    //   return accounts.map(account => {\r\n+    //     if (tasks.some(item => item.id === account.id && item.status === \"1\")) {\r\n+    //       return \"bg-green-400\";\r\n+    //     } else {\r\n+    //       return \"bg-yellow-400\";\r\n+    //     }\r\n+    //   });\r\n+    // };\r\n+\r\n+    // const updatedRowClassNames = colorRows(tasks);\r\n+    // setRowClassNames(updatedRowClassNames);\r\n+  }, [tasks])\r\n+\r\n+  function getStatusClassName(status: string) {\r\n+    if (status === \"1\") {\r\n+      return 'bg-yellow-500'; // 使用 yellow 样式类名\r\n+    } else if (status === \"2\") {\r\n+      return 'bg-green-500'; // 使用 green 样式类名\r\n+    } else {\r\n+      return ''; // 没有其他样式类名\r\n+    }\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n+      <TabsList className=\"grid w-full grid-cols-2\">\r\n+        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n+        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n+      </TabsList>\r\n+      <TabsContent value=\"account\">\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+      </TabsContent>\r\n+      <TabsContent value=\"password\">\r\n+      <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+              <TableHead>状态</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {tasks &&\r\n+              tasks.map((account: IDAccount, index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={getStatusClassName(account.status)}>\r\n+                    <TableCell>{account.username}</TableCell>\r\n+                    <TableCell>{account.password}</TableCell>\r\n+                    <TableCell>{account.idcard}</TableCell>\r\n+                    <TableCell>{account.date}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+      </TabsContent>\r\n+    </Tabs>\r\n+      \r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710402424639,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -163,9 +163,9 @@\n               <TableHead>用户名</TableHead>\r\n               <TableHead>密码</TableHead>\r\n               <TableHead>身份证</TableHead>\r\n               <TableHead>时间</TableHead>\r\n-              <TableHead>状态</TableHead>\r\n+              <TableHead>名称</TableHead>\r\n             </TableRow>\r\n           </TableHeader>\r\n           <TableBody>\r\n             {tasks &&\r\n@@ -186,384 +186,4 @@\n       \r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger,\r\n-} from \"@/components/ui/tabs\"\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-import { IDAccount } from '@/lib/utils'\r\n-\r\n-export default function TAccounts({ tasks }: { tasks: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => { \r\n-    // const colorRows = (accounts: IDAccount[]) => {\r\n-    //   return accounts.map(account => {\r\n-    //     if (tasks.some(item => item.id === account.id && item.status === \"1\")) {\r\n-    //       return \"bg-green-400\";\r\n-    //     } else {\r\n-    //       return \"bg-yellow-400\";\r\n-    //     }\r\n-    //   });\r\n-    // };\r\n-\r\n-    // const updatedRowClassNames = colorRows(tasks);\r\n-    // setRowClassNames(updatedRowClassNames);\r\n-  }, [tasks])\r\n-\r\n-  function getStatusClassName(status: string) {\r\n-    if (status === \"1\") {\r\n-      return 'bg-yellow-500'; // 使用 yellow 样式类名\r\n-    } else if (status === \"2\") {\r\n-      return 'bg-green-500'; // 使用 green 样式类名\r\n-    } else {\r\n-      return ''; // 没有其他样式类名\r\n-    }\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n-      <TabsList className=\"grid w-full grid-cols-2\">\r\n-        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n-        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n-      </TabsList>\r\n-      <TabsContent value=\"account\">\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-      </TabsContent>\r\n-      <TabsContent value=\"password\">\r\n-      <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-              <TableHead>状态</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {tasks &&\r\n-              tasks.map((account: IDAccount, index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={getStatusClassName(account.status)}>\r\n-                    <TableCell>{account.username}</TableCell>\r\n-                    <TableCell>{account.password}</TableCell>\r\n-                    <TableCell>{account.idcard}</TableCell>\r\n-                    <TableCell>{account.date}</TableCell>\r\n-                    <TableCell>{account.status}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-      </TabsContent>\r\n-    </Tabs>\r\n-      \r\n-    </div>\r\n-  )\r\n-}\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger,\r\n-} from \"@/components/ui/tabs\"\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-import { IDAccount } from '@/lib/utils'\r\n-\r\n-export default function TAccounts({ tasks }: { tasks: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('1')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => { \r\n-    // const colorRows = (accounts: IDAccount[]) => {\r\n-    //   return accounts.map(account => {\r\n-    //     if (tasks.some(item => item.id === account.id && item.status === \"1\")) {\r\n-    //       return \"bg-green-400\";\r\n-    //     } else {\r\n-    //       return \"bg-yellow-400\";\r\n-    //     }\r\n-    //   });\r\n-    // };\r\n-\r\n-    // const updatedRowClassNames = colorRows(tasks);\r\n-    // setRowClassNames(updatedRowClassNames);\r\n-  }, [tasks])\r\n-\r\n-  function getStatusClassName(status) {\r\n-    if (status === \"1\") {\r\n-      return 'bg-yellow-500'; // 使用 yellow 样式类名\r\n-    } else if (status === \"2\") {\r\n-      return 'bg-green-500'; // 使用 green 样式类名\r\n-    } else {\r\n-      return ''; // 没有其他样式类名\r\n-    }\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n-      <TabsList className=\"grid w-full grid-cols-2\">\r\n-        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n-        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n-      </TabsList>\r\n-      <TabsContent value=\"account\">\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-      </TabsContent>\r\n-      <TabsContent value=\"password\">\r\n-      <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-              <TableHead>状态</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {tasks &&\r\n-              tasks.map((account: IDAccount, index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={getStatusClassName(account.status)}>\r\n-                    <TableCell>{account.username}</TableCell>\r\n-                    <TableCell>{account.password}</TableCell>\r\n-                    <TableCell>{account.idcard}</TableCell>\r\n-                    <TableCell>{account.date}</TableCell>\r\n-                    <TableCell>{account.status}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-      </TabsContent>\r\n-    </Tabs>\r\n-      \r\n-    </div>\r\n-  )\r\n-}\r\n"
                },
                {
                    "date": 1710402466994,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -115,9 +115,9 @@\n         <div className=\"flex space-x-2 justify-around\">\r\n           <Button onClick={clear}>清空</Button>\r\n           <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n             <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"0\" id=\"oneday\" />\r\n+              <RadioGroupItem value=\"一日票\" id=\"oneday\" />\r\n               <Label htmlFor=\"option-one\">一日票</Label>\r\n             </div>\r\n             <div className=\"flex items-center space-x-2\">\r\n               <RadioGroupItem value=\"1\" id=\"morning\" />\r\n"
                },
                {
                    "date": 1710402472712,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -119,9 +119,9 @@\n               <RadioGroupItem value=\"一日票\" id=\"oneday\" />\r\n               <Label htmlFor=\"option-one\">一日票</Label>\r\n             </div>\r\n             <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"1\" id=\"morning\" />\r\n+              <RadioGroupItem value=\"早享卡\" id=\"morning\" />\r\n               <Label htmlFor=\"option-two\">早享卡</Label>\r\n             </div>\r\n           </RadioGroup>\r\n           <Button\r\n"
                },
                {
                    "date": 1710402631793,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -30,9 +30,9 @@\n   const [accounts, setAccounts] = useState<string[][]>([\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n     [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n   ])\r\n-  const [type, setType] = useState<string>('1')\r\n+  const [type, setType] = useState<string>('一日票')\r\n   const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n   const formatPastedText = (data: string) => {\r\n     const rows = data.split('\\n')\r\n     const result = rows.map((row) => {\r\n"
                },
                {
                    "date": 1710402685160,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -175,8 +175,9 @@\n                     <TableCell>{account.username}</TableCell>\r\n                     <TableCell>{account.password}</TableCell>\r\n                     <TableCell>{account.idcard}</TableCell>\r\n                     <TableCell>{account.date}</TableCell>\r\n+                    <TableCell>{account.category}</TableCell>\r\n                   </TableRow>\r\n                 )\r\n               })}\r\n           </TableBody>\r\n"
                },
                {
                    "date": 1710402884818,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -0,0 +1,176 @@\n+import TCard from './t_card'\r\n+import React, { useEffect, useState } from 'react';\r\n+import {\r\n+  Table,\r\n+  TableBody,\r\n+  TableCell,\r\n+  TableHead,\r\n+  TableHeader,\r\n+  TableRow,\r\n+} from '@/components/ui/table'\r\n+import {\r\n+  Tabs,\r\n+  TabsContent,\r\n+  TabsList,\r\n+  TabsTrigger,\r\n+} from \"@/components/ui/tabs\"\r\n+import { Toaster } from '@/components/ui/toaster'\r\n+import { Label } from '@/components/ui/label'\r\n+import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n+import { Button } from '@/components/ui/button'\r\n+import axios from 'axios'\r\n+import { useToast } from '@/components/ui/use-toast'\r\n+import API from '@/lib/api'\r\n+import { v4 as uuidv4 } from 'uuid';\r\n+import { IDAccount } from '@/lib/utils'\r\n+\r\n+export default function TAccounts({ tasks }: { tasks: IDAccount[] }) {\r\n+  const { toast } = useToast()\r\n+  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n+  const [accounts, setAccounts] = useState<string[][]>([\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n+  ])\r\n+  const [type, setType] = useState<string>('一日票')\r\n+  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n+  const formatPastedText = (data: string) => {\r\n+    const rows = data.split('\\n')\r\n+    const result = rows.map((row) => {\r\n+      let columns = row.split(',')\r\n+      // columns.unshift(uuidv4())\r\n+      return columns.map((column) => column.trim())\r\n+    })\r\n+    setAccounts([...result, ...accounts])\r\n+  }\r\n+\r\n+  const handlePaste = (event: any) => {\r\n+    const clipboardData = event.clipboardData || window.clipboardData\r\n+    const pastedText = clipboardData.getData('text')\r\n+    formatPastedText(pastedText)\r\n+  }\r\n+\r\n+  const clear = () => {\r\n+    setAccounts([])\r\n+  }\r\n+\r\n+  const submit = () => {\r\n+    const formatedAccounts = accounts.map((account) => {\r\n+      return {\r\n+        id: account[0],\r\n+        username: account[1],\r\n+        password: account[2],\r\n+        idcard: account[3],\r\n+        date: account[4],\r\n+      }\r\n+    })\r\n+    const data = {\r\n+      type: type,\r\n+      accounts: formatedAccounts,\r\n+    }\r\n+    API.post('/api/prepare', { ...data })\r\n+    setDisabledButton(true)\r\n+    toast({\r\n+      description: '任务创建成功',\r\n+    })\r\n+  }\r\n+\r\n+  const handleSelect = (value: string) => {\r\n+    setType(value)\r\n+  }\r\n+\r\n+  function getStatusClassName(status: string) {\r\n+    if (status === \"1\") {\r\n+      return 'bg-yellow-500'; // 使用 yellow 样式类名\r\n+    } else if (status === \"2\") {\r\n+      return 'bg-green-500'; // 使用 green 样式类名\r\n+    } else {\r\n+      return ''; // 没有其他样式类名\r\n+    }\r\n+  }\r\n+\r\n+  return (\r\n+    <div onPaste={handlePaste}>\r\n+      <Toaster />\r\n+      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n+      <TabsList className=\"grid w-full grid-cols-2\">\r\n+        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n+        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n+      </TabsList>\r\n+      <TabsContent value=\"account\">\r\n+      <TCard title=\"把账户粘贴到这里\">\r\n+        <div className=\"flex space-x-2 justify-around\">\r\n+          <Button onClick={clear}>清空</Button>\r\n+          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"一日票\" id=\"oneday\" />\r\n+              <Label htmlFor=\"option-one\">一日票</Label>\r\n+            </div>\r\n+            <div className=\"flex items-center space-x-2\">\r\n+              <RadioGroupItem value=\"早享卡\" id=\"morning\" />\r\n+              <Label htmlFor=\"option-two\">早享卡</Label>\r\n+            </div>\r\n+          </RadioGroup>\r\n+          <Button\r\n+            onClick={submit}\r\n+            variant=\"destructive\">\r\n+            准备\r\n+          </Button>\r\n+        </div>\r\n+        <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {accounts &&\r\n+              accounts.map((account: string[], index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={rowClassNames[index]}>\r\n+                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n+                    <TableCell>{account[2]}</TableCell>\r\n+                    <TableCell>{account[3]}</TableCell>\r\n+                    <TableCell>{account[4]}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+        <br />\r\n+      </TCard>\r\n+      </TabsContent>\r\n+      <TabsContent value=\"password\">\r\n+      <Table>\r\n+          <TableHeader>\r\n+            <TableRow>\r\n+              <TableHead>用户名</TableHead>\r\n+              <TableHead>密码</TableHead>\r\n+              <TableHead>身份证</TableHead>\r\n+              <TableHead>时间</TableHead>\r\n+              <TableHead>名称</TableHead>\r\n+            </TableRow>\r\n+          </TableHeader>\r\n+          <TableBody>\r\n+            {tasks &&\r\n+              tasks.map((account: IDAccount, index: number) => {\r\n+                return (\r\n+                  <TableRow key={index} className={getStatusClassName(account.status)}>\r\n+                    <TableCell>{account.username}</TableCell>\r\n+                    <TableCell>{account.password}</TableCell>\r\n+                    <TableCell>{account.idcard}</TableCell>\r\n+                    <TableCell>{account.date}</TableCell>\r\n+                    <TableCell>{account.category}</TableCell>\r\n+                  </TableRow>\r\n+                )\r\n+              })}\r\n+          </TableBody>\r\n+        </Table>\r\n+      </TabsContent>\r\n+    </Tabs>\r\n+      \r\n+    </div>\r\n+  )\r\n+}\r\n"
                },
                {
                    "date": 1710402909500,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -55,9 +55,9 @@\n \r\n   const submit = () => {\r\n     const formatedAccounts = accounts.map((account) => {\r\n       return {\r\n-        id: account[0],\r\n+        id: uuidv4(),\r\n         username: account[1],\r\n         password: account[2],\r\n         idcard: account[3],\r\n         date: account[4],\r\n@@ -173,194 +173,4 @@\n       \r\n     </div>\r\n   )\r\n }\r\n-import TCard from './t_card'\r\n-import React, { useEffect, useState } from 'react';\r\n-import {\r\n-  Table,\r\n-  TableBody,\r\n-  TableCell,\r\n-  TableHead,\r\n-  TableHeader,\r\n-  TableRow,\r\n-} from '@/components/ui/table'\r\n-import {\r\n-  Tabs,\r\n-  TabsContent,\r\n-  TabsList,\r\n-  TabsTrigger,\r\n-} from \"@/components/ui/tabs\"\r\n-import { Toaster } from '@/components/ui/toaster'\r\n-import { Label } from '@/components/ui/label'\r\n-import { RadioGroup, RadioGroupItem } from '@/components/ui/radio-group'\r\n-import { Button } from '@/components/ui/button'\r\n-import axios from 'axios'\r\n-import { useToast } from '@/components/ui/use-toast'\r\n-import API from '@/lib/api'\r\n-import { v4 as uuidv4 } from 'uuid';\r\n-import { IDAccount } from '@/lib/utils'\r\n-\r\n-export default function TAccounts({ tasks }: { tasks: IDAccount[] }) {\r\n-  const { toast } = useToast()\r\n-  const [rowClassNames, setRowClassNames] = useState<string[]>([]);\r\n-  const [accounts, setAccounts] = useState<string[][]>([\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-    [uuidv4(),'13127778188', '520521jn', '222403198502200011', '2024-03-03'],\r\n-  ])\r\n-  const [type, setType] = useState<string>('一日票')\r\n-  const [disabledButton, setDisabledButton] = useState<boolean>(false)\r\n-  const formatPastedText = (data: string) => {\r\n-    const rows = data.split('\\n')\r\n-    const result = rows.map((row) => {\r\n-      let columns = row.split(',')\r\n-      columns.unshift(uuidv4())\r\n-      return columns.map((column) => column.trim())\r\n-    })\r\n-    setAccounts([...result, ...accounts])\r\n-  }\r\n-\r\n-  const handlePaste = (event: any) => {\r\n-    const clipboardData = event.clipboardData || window.clipboardData\r\n-    const pastedText = clipboardData.getData('text')\r\n-    formatPastedText(pastedText)\r\n-  }\r\n-\r\n-  const clear = () => {\r\n-    setAccounts([])\r\n-  }\r\n-\r\n-  const submit = () => {\r\n-    const formatedAccounts = accounts.map((account) => {\r\n-      return {\r\n-        id: account[0],\r\n-        username: account[1],\r\n-        password: account[2],\r\n-        idcard: account[3],\r\n-        date: account[4],\r\n-      }\r\n-    })\r\n-    const data = {\r\n-      type: type,\r\n-      accounts: formatedAccounts,\r\n-    }\r\n-    API.post('/api/prepare', { ...data })\r\n-    setDisabledButton(true)\r\n-    toast({\r\n-      description: '任务创建成功',\r\n-    })\r\n-  }\r\n-\r\n-  const handleSelect = (value: string) => {\r\n-    setType(value)\r\n-  }\r\n-  useEffect(() => { \r\n-    // const colorRows = (accounts: IDAccount[]) => {\r\n-    //   return accounts.map(account => {\r\n-    //     if (tasks.some(item => item.id === account.id && item.status === \"1\")) {\r\n-    //       return \"bg-green-400\";\r\n-    //     } else {\r\n-    //       return \"bg-yellow-400\";\r\n-    //     }\r\n-    //   });\r\n-    // };\r\n-\r\n-    // const updatedRowClassNames = colorRows(tasks);\r\n-    // setRowClassNames(updatedRowClassNames);\r\n-  }, [tasks])\r\n-\r\n-  function getStatusClassName(status: string) {\r\n-    if (status === \"1\") {\r\n-      return 'bg-yellow-500'; // 使用 yellow 样式类名\r\n-    } else if (status === \"2\") {\r\n-      return 'bg-green-500'; // 使用 green 样式类名\r\n-    } else {\r\n-      return ''; // 没有其他样式类名\r\n-    }\r\n-  }\r\n-\r\n-  return (\r\n-    <div onPaste={handlePaste}>\r\n-      <Toaster />\r\n-      <Tabs defaultValue=\"account\" className=\"w-full\">\r\n-      <TabsList className=\"grid w-full grid-cols-2\">\r\n-        <TabsTrigger value=\"account\">表单</TabsTrigger>\r\n-        <TabsTrigger value=\"password\">任务列表</TabsTrigger>\r\n-      </TabsList>\r\n-      <TabsContent value=\"account\">\r\n-      <TCard title=\"把账户粘贴到这里\">\r\n-        <div className=\"flex space-x-2 justify-around\">\r\n-          <Button onClick={clear}>清空</Button>\r\n-          <RadioGroup defaultValue={type} onValueChange={handleSelect}>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"一日票\" id=\"oneday\" />\r\n-              <Label htmlFor=\"option-one\">一日票</Label>\r\n-            </div>\r\n-            <div className=\"flex items-center space-x-2\">\r\n-              <RadioGroupItem value=\"早享卡\" id=\"morning\" />\r\n-              <Label htmlFor=\"option-two\">早享卡</Label>\r\n-            </div>\r\n-          </RadioGroup>\r\n-          <Button\r\n-            onClick={submit}\r\n-            variant=\"destructive\">\r\n-            准备\r\n-          </Button>\r\n-        </div>\r\n-        <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {accounts &&\r\n-              accounts.map((account: string[], index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={rowClassNames[index]}>\r\n-                    <TableCell className=\"font-medium\">{account[1]}</TableCell>\r\n-                    <TableCell>{account[2]}</TableCell>\r\n-                    <TableCell>{account[3]}</TableCell>\r\n-                    <TableCell>{account[4]}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-        <br />\r\n-      </TCard>\r\n-      </TabsContent>\r\n-      <TabsContent value=\"password\">\r\n-      <Table>\r\n-          <TableHeader>\r\n-            <TableRow>\r\n-              <TableHead>用户名</TableHead>\r\n-              <TableHead>密码</TableHead>\r\n-              <TableHead>身份证</TableHead>\r\n-              <TableHead>时间</TableHead>\r\n-              <TableHead>名称</TableHead>\r\n-            </TableRow>\r\n-          </TableHeader>\r\n-          <TableBody>\r\n-            {tasks &&\r\n-              tasks.map((account: IDAccount, index: number) => {\r\n-                return (\r\n-                  <TableRow key={index} className={getStatusClassName(account.status)}>\r\n-                    <TableCell>{account.username}</TableCell>\r\n-                    <TableCell>{account.password}</TableCell>\r\n-                    <TableCell>{account.idcard}</TableCell>\r\n-                    <TableCell>{account.date}</TableCell>\r\n-                    <TableCell>{account.category}</TableCell>\r\n-                  </TableRow>\r\n-                )\r\n-              })}\r\n-          </TableBody>\r\n-        </Table>\r\n-      </TabsContent>\r\n-    </Tabs>\r\n-      \r\n-    </div>\r\n-  )\r\n-}\r\n"
                }
            ],
            "date": 1710333447062,
            "name": "Commit-0",
            "content": "import TCard from './t_card'\r\n\r\n\r\nexport default function TAccounts() {\r\n  return (\r\n    <div>\r\n      <TCard title=\"请把账户粘贴到这里\">\r\n        \r\n      </TCard>\r\n    </div>\r\n  )\r\n}\r\n"
        }
    ]
}